<?xml version="1.0"?>
<doc>
<assembly>
<name>
LastFmLibNet
</name>
</assembly>
<members>
<member name="T:LastFmLib.API20.Artist.ArtistShare">
	<summary>
 Share an artist with Last.fm users or other friends. 
 </summary>
</member><member name="T:LastFmLib.API20.Tracks.TrackAddTags">
	<summary>
 Tag an album using a list of user supplied tags. 
 </summary>
</member><member name="T:LastFmLib.API20.Tracks.TrackBan">
	<summary>
 Ban a track for a given user profile. 
 This needs to be supplemented with a scrobbling submission containing the 'ban' rating (see the audioscrobbler API). 
 </summary>
</member><member name="P:LastFmLib.API20.Types.AlbumInfo.Tags">
	<summary>
 Gets or sets the tags.
 </summary>
	<value>The tags.</value>
</member><member name="P:LastFmLib.API20.Types.AlbumInfo.PlayCount">
	<summary>
 Gets or sets the play count.
 </summary>
	<value>The play count.</value>
</member><member name="P:LastFmLib.API20.Types.AlbumInfo.NumListeners">
	<summary>
 Gets or sets the number of listeners.
 </summary>
	<value>The num listeners.</value>
</member><member name="P:LastFmLib.API20.Types.AlbumInfo.ReleaseDate">
	<summary>
 Gets or sets the release date.
 </summary>
	<value>The release date.</value>
</member><member name="P:LastFmLib.API20.Types.AlbumInfo.Url">
	<summary>
 Gets or sets the URL.
 </summary>
	<value>The URL.</value>
</member><member name="P:LastFmLib.API20.Types.AlbumInfo.MbId">
	<summary>
 Gets or sets the MB-Id.
 </summary>
	<value>The mb id.</value>
</member><member name="P:LastFmLib.API20.Types.AlbumInfo.Id">
	<summary>
 Gets or sets the album id.
 </summary>
	<value>The id.</value>
</member><member name="P:LastFmLib.API20.Types.AlbumInfo.Artist">
	<summary>
 Gets or sets the artist.
 </summary>
	<value>The artist.</value>
</member><member name="P:LastFmLib.API20.Types.AlbumInfo.AlbumName">
	<summary>
 Gets or sets the name of the album.
 </summary>
	<value>The name of the album.</value>
</member><member name="M:LastFmLib.API20.Types.AlbumInfo.ToDebugString">
	<summary>
 Toes the debug string.
 </summary>
	<returns>
 If successful, a String is returned, else <c>null</c>
	</returns>
</member><member name="M:LastFmLib.API20.Types.AlbumInfo.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.API20.Types.AlbumInfo"/> class.
 </summary>
</member><member name="M:LastFmLib.API20.Types.AlbumInfo.#ctor(System.Xml.XmlElement)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.API20.Types.AlbumInfo"/> class.
 </summary>
	<param name="elem">The elem.</param>
</member><member name="M:LastFmLib.API20.Types.AlbumInfo.FromXmlElement(System.Xml.XmlElement)">
	<summary>:
 Froms the XML element.
 </summary>
	<param name="elem">The elem.</param>
	<returns>
 If successful, a AlbumInfo is returned, else <c>null</c>
	</returns>
</member><member name="T:LastFmLib.API20.Types.AlbumInfo">
	<summary>
 Stores information of an album.
 </summary>
</member><member name="T:LastFmLib.API20.User.UserGetTopTracks">
	<summary>
 Get the top tracks listened to by a user. 
 You can stipulate a time period. Sends the overall chart by default. 
 </summary>
</member><member name="M:LastFmLib.GeneralFunctions.tr(System.String@)">
	<summary>
 This Function is desgned to return the translation of "s" in the user's language.
 It is NOT Implemented yet, so it only returns s
 </summary>
	<param name="s">The string to translate</param>
	<returns>Function is NOT Implemented yet, so it only returns s</returns>
</member><member name="P:LastFmLib.Scrobbler.ScrobblerHttp.host">
	<summary>
 Gets the host.
 </summary>
	<value>The host.</value>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerHttp.get(System.String,System.String,System.Boolean)">
	<summary>
 Retrieves the Request asyncronous using the GET Method. If successful, success() is called.
 </summary>
	<param name="host">The host.</param>
	<param name="path">The path.</param>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerHttp.get(System.String,System.Boolean)">
	<summary>
 Retrieves the Request asyncronous using the GET Method. If successful, success() is called.
 </summary>
	<param name="path">The RELATIVE path(baseHost is added before "path").</param>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerHttp.get(System.Uri,System.Boolean)">
	<summary>
 Retrieves the Request asyncronous using the GET Method. If successful, success() is called.
 </summary>
	<param name="path">The absolute System.Uri from where it is tried to get the request/response</param>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerHttp.success(System.String)">
	<summary>
 Is called if the request was successful. Overriden by many deriving classes.
 </summary>
	<param name="data">The data.</param>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerHttp.success(System.Byte[])">
	<summary>
 Is called if the request was successful. Overriden by many deriving classes.
 </summary>
	<param name="data">The data.</param>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerHttp.success(System.Net.WebResponse)">
	<summary>
 Is called if the request was successful. Overriden by many deriving classes.
 </summary>
	<param name="response">The response.</param>
</member><member name="T:LastFmLib.Scrobbler.ScrobblerHttp">
	<summary>
 The Scrobbler HTTP. Internally needed for scrobbling
 </summary>
</member><member name="M:LastFmLib.TypeClasses.WeightedArtistList.weightMoreThan(LastFmLib.TypeClasses.WeightedArtist,LastFmLib.TypeClasses.WeightedArtist)">
	<summary>
 If the weighting of s1 is more than s2.weighting
 </summary>
	<param name="s1">The s1.</param>
	<param name="s2">The s2.</param>
	<returns>
 If successful, a Int32 is returned, else <c>null</c>
	</returns>
</member><member name="P:LastFmLib.WebRequests.TrackMetaDataRequest.Track">
	<summary>
 Gets the MetaData(only senseful after request^^) or sets them(should contain artist,album,title)
 </summary>
	<value>The MetaData.</value>
</member><member name="P:LastFmLib.WebRequests.TrackMetaDataRequest.LanugageCode">
	<summary>
 Gets or sets the lanugage code.
 </summary>
	<value>The lanugage code.</value>
</member><member name="P:LastFmLib.WebRequests.TrackMetaDataRequest.MetaData">
	<summary>
 Same as Track property, only for better finding the result.
 </summary>
	<value>The meta data.</value>
</member><member name="M:LastFmLib.WebRequests.TrackMetaDataRequest.#ctor(LastFmLib.TypeClasses.MetaData)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.TrackMetaDataRequest"/> class.
 </summary>
	<param name="md">The metadata which conatins at least artist, album and title.</param>
</member><member name="M:LastFmLib.WebRequests.TrackMetaDataRequest.#ctor(LastFmLib.TypeClasses.TrackInfo)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.TrackMetaDataRequest"/> class.
 </summary>
	<param name="t">The TrackInfo instance containing artist, album and title.</param>
</member><member name="T:LastFmLib.WebRequests.TrackMetaDataRequest">
	<summary>
 Requests the meta data of track
 </summary>
</member><member name="P:LastFmLib.WebRequests.UserPicturesRequest.Urls">
	<summary>
 Gets the urls.
 </summary>
	<value>The urls.</value>
</member><member name="P:LastFmLib.WebRequests.UserPicturesRequest.Names">
	<summary>
 Gets or sets the names.
 </summary>
	<value>The names.</value>
</member><member name="M:LastFmLib.WebRequests.UserPicturesRequest.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.UserPicturesRequest"/> class.
 </summary>
</member><member name="M:LastFmLib.WebRequests.UserPicturesRequest.fetchForUser(System.String)">
	<summary>
 Fetches for user.
 </summary>
	<param name="username">The username.</param>
	<returns></returns>
</member><member name="T:LastFmLib.WebRequests.UserPicturesRequest">
	<summary>
 Gets the avatar picture urls for a list of users.
 </summary>
</member><member name="T:LastFmLib.API20.Artist.ArtistGetEvents">
	<summary>
 Get a list of events for this artist. Easily integratable into calendars, using the ical standard (see feeds section below). 
 </summary>
</member><member name="T:LastFmLib.API20.Groups.GroupGetWeeklyArtistChart">
	<summary>
 Get an artist chart for a group, for a given date range. If no date range is supplied, it will return the most recent album chart for this group. 
 </summary>
</member><member name="T:LastFmLib.API20.Tracks.TrackGetTopTags">
	<summary>
 Get the top tags for this track on Last.fm, ordered by tag count. Supply either track &amp; artist name or mbid. 
 </summary>
</member><member name="T:LastFmLib.API20.Types.Session">
	<summary>
 Stores session data. Keep the session key!
 </summary>
</member><member name="T:LastFmLib.API20.Types.TopFan">
	<summary>
 Class for storing data from xxxTopFans requests
 </summary>
</member><member name="M:LastFmLib.Scrobbler.Scrobbler.GetSubmissionString(LastFmLib.Scrobbler.ScrobblerCache@)">
	<summary>
 Gets the submission string(converted to UTF-8) of a ScrobblerCache.
 </summary>
	<returns>
 If successful, a String is returned, else <c>null</c>
	</returns>
</member><member name="M:LastFmLib.Scrobbler.Scrobbler.GetSubmissionString(System.Collections.Generic.List{LastFmLib.TypeClasses.TrackInfo}@)">
	<summary>
 Gets the submission string(converted to UTF-8) of a track list.
 </summary>
	<param name="tracks">The tracks.</param>
	<returns>
 If successful, a String is returned, else <c>null</c>
	</returns>
</member><member name="M:LastFmLib.Scrobbler.Scrobbler.Submit(System.Collections.Generic.List{LastFmLib.TypeClasses.TrackInfo}@)">
	<summary>
 Submits the specified tracks.
 </summary>
	<param name="tracks">The tracks.</param>
	<returns>The amount of submitted tracks</returns>
	<remarks>Only a max. of 50 tracks are submitted at once.</remarks>
</member><member name="M:LastFmLib.Scrobbler.Scrobbler.Submit(LastFmLib.Scrobbler.ScrobblerCache@)">
	<summary>Submits the specified tracks of a ScrobblerCache.
 </summary>
	<param name="cache">The cache.</param>
	<returns>The amount of submitted tracks</returns>
	<remarks>Only a max. of 50 tracks are submitted at once.</remarks>
</member><member name="M:LastFmLib.Scrobbler.Scrobbler.Invalidate(LastFmLib.Scrobbler.Structs.ScrobblerError)">
	<summary>
 Invalidates this scrobbler instance and raises an event
 </summary>
	<param name="e">The error.</param>
</member><member name="T:LastFmLib.Scrobbler.Scrobbler">
	<summary>
 The Scrobbler itself.
 </summary>
</member><member name="P:LastFmLib.WebRequests.SetTagRequest.Token">
	<summary>
 Gets or sets the token.
 </summary>
	<value>The token.</value>
</member><member name="P:LastFmLib.WebRequests.SetTagRequest.Mode">
	<summary>
 Gets or sets the tagging mode(append or overwrite)
 </summary>
	<value>The mode.</value>
</member><member name="P:LastFmLib.WebRequests.SetTagRequest.Tags">
	<summary>
 Gets or sets the tags.
 </summary>
	<value>The tags.</value>
</member><member name="P:LastFmLib.WebRequests.SetTagRequest.Track">
	<summary>
 Gets or sets the track.
 </summary>
	<value>The track.</value>
</member><member name="P:LastFmLib.WebRequests.SetTagRequest.TagType">
	<summary>
 Gets or sets the type of what to tag.
 </summary>
	<value>The type of what to tag.</value>
	<exception cref="T:System.NotSupportedException">Thrown if tag type is not artist, album or track.</exception>
</member><member name="P:LastFmLib.WebRequests.SetTagRequest.TitleString">
	<summary>
 Gets the title string(e.g. Name - Album or Name - Track).
 </summary>
	<value>The title string.</value>
</member><member name="M:LastFmLib.WebRequests.SetTagRequest.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.SetTagRequest"/> class.
 </summary>
</member><member name="M:LastFmLib.WebRequests.SetTagRequest.#ctor(LastFmLib.TypeClasses.LastFmUser,LastFmLib.TypeClasses.TrackInfo,LastFmLib.WebRequests.modEnums.ItemType,System.Collections.Generic.List{System.String})">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.SetTagRequest"/> class.
 </summary>
	<param name="user">The user.</param>
	<param name="track">The track.</param>
	<param name="it">The tagging type(artist, album or track).</param>
	<param name="tags">The tags.</param>
</member><member name="M:LastFmLib.WebRequests.SetTagRequest.setType(LastFmLib.WebRequests.modEnums.ItemType)">
	<summary>
 Determines the type of what should be tagged(Artist, Album, Track,...).
 </summary>
	<param name="type">The type.</param>
</member><member name="M:LastFmLib.WebRequests.SetTagRequest.Append(LastFmLib.TypeClasses.Track,System.Collections.Generic.List{System.String})">
	<summary>
 Appends the specified tag to a track. The returned request has to be started manually!
 </summary>
	<param name="track">The track.</param>
	<param name="tags">The tag(s). Should be one tag or a CSV list</param>
	<returns>A request instance. Propertys have to be set correctly afterwards(e.g. username, passwordMD5)</returns>
</member><member name="T:LastFmLib.WebRequests.SetTagRequest">
	<summary>
 Tags an Artist, Album, Track, etc. for a user
 </summary>
</member><member name="P:LastFmLib.WebRequests.XMLRpc.Parameters">
	<summary>
 Gets the parameter list.
 </summary>
	<value>The parameters.</value>
</member><member name="P:LastFmLib.WebRequests.XMLRpc.UseCache">
	<summary>
 Gets or sets a value indicating whether to use a cache or not.
 </summary>
	<value>Caching isn't implemented yet, so this will throw a NotSupportedException.</value>
</member><member name="F:LastFmLib.WebRequests.XMLRpc.enType.Integer">
	<summary>
 Integer
 </summary>
</member><member name="F:LastFmLib.WebRequests.XMLRpc.enType.Struct">
	<summary>
 Structure
 </summary>
</member><member name="F:LastFmLib.WebRequests.XMLRpc.enType.Array">
	<summary>
 Array
 </summary>
</member><member name="F:LastFmLib.WebRequests.XMLRpc.enType.Boolean">
	<summary>
 Boolean
 </summary>
</member><member name="F:LastFmLib.WebRequests.XMLRpc.enType.String">
	<summary>
 String
 </summary>
</member><member name="F:LastFmLib.WebRequests.XMLRpc.enType.Unhandled">
	<summary>
 Unknown type
 </summary>
</member><member name="T:LastFmLib.WebRequests.XMLRpc.enType">
	<summary>
 An enum for the "types" inside the rpc.
 </summary>
</member><member name="M:LastFmLib.WebRequests.XMLRpc.addParameter(System.Object)">
	<summary>
 Adds the parameter.
 </summary>
	<param name="v">The new parameter(-object)</param>
</member><member name="M:LastFmLib.WebRequests.XMLRpc.toString">
	<summary>
 Returns the xml request data, including parameters, as an XML-string.
 </summary>
	<returns></returns>
</member><member name="M:LastFmLib.WebRequests.XMLRpc.ParseResponse(System.String,System.Collections.Generic.List{System.Object}@,System.String@)">
	<summary>
 Parses the specified XML response.
 </summary>
	<param name="xmlResponse">The XML response.</param>
	<param name="returnValues">The return values.</param>
	<param name="error">The error.</param>
	<returns></returns>
</member><member name="M:LastFmLib.WebRequests.XMLRpc.Escape(System.String)">
	<summary>
 Escapes some chars in the XML string.
 </summary>
	<param name="xml">The XML.</param>
	<returns></returns>
</member><member name="M:LastFmLib.WebRequests.XMLRpc.UnEscape(System.String)">
	<summary>
 Unscapes some chars in the XML string.
 </summary>
	<param name="xml">The XML.</param>
	<returns></returns>
</member><member name="M:LastFmLib.WebRequests.XMLRpc.TypeFromString(System.String)">
	<summary>
 conversion from a type string like "string" or "i4" into a TypeEnum
 </summary>
	<param name="s">The s.</param>
	<returns></returns>
</member><member name="T:LastFmLib.WebRequests.XMLRpc">
	<summary>
 A class for parsing XML remote procedure calls.
 </summary>
</member><member name="T:LastFmLib.API20.Artist.ArtistGetInfo">
	<summary>
 Get the metadata for an artist on Last.fm. Includes biography. 
 </summary>
</member><member name="T:LastFmLib.API20.Artist.ArtistGetTopFans">
	<summary>
 Get the top fans for an artist on Last.fm, based on listening data. 
 </summary>
</member><member name="F:LastFmLib.API20.modEnums.TasteOMeterData.m_type">
	<summary>
	</summary>
</member><member name="P:LastFmLib.API20.modEnums.TasteOMeterData.Value">
	<summary>
 Gets or sets the TastOmeter data value. Can be a Last.fm username, a MySpace profile url or a comma-seperated string list of artists
 </summary>
	<value>The value. Can be a Last.fm username, a MySpace profile url or a comma-seperated string list of artists</value>
</member><member name="P:LastFmLib.API20.modEnums.TasteOMeterData.Type">
	<summary>
 Gets or sets the type of Taste-O-Meter data
 </summary>
	<value>The type.</value>
</member><member name="F:LastFmLib.API20.modEnums.TasteOMeterType.User">
	<summary>
	</summary>
</member><member name="F:LastFmLib.API20.modEnums.TasteOMeterType.Artists">
	<summary>
	</summary>
</member><member name="F:LastFmLib.API20.modEnums.TasteOMeterType.MySpace">
	<summary>
	</summary>
</member><member name="T:LastFmLib.API20.modEnums.TasteOMeterType">
	<summary>
 Type of Taste-O-Meter data
 </summary>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.InvalidService">
	<summary>
 Invalid service -This service does not exist
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.InvalidMethod">
	<summary>
 Invalid Method - No method with that name in this package
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.AuthenticationFailed">
	<summary>
 Authentication Failed - You do not have permissions to access the service
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.InvalidFormat">
	<summary>
 Invalid format - This service doesn't exist in that format
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.InvalidParameters">
	<summary>
 Invalid parameters - A parameter is missing or invalid.
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.InvalidResource">
	<summary>
 Invalid resource specified
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.EmptyResult">
	<summary>
 The request result was empty, e.g. because of a non-existing artist/album/track/tag.
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.InvalidSessionKey">
	<summary>
 Invalid session key - Please re-authenticate
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.InvalidApiKey">
	<summary>
 Invalid API key - You must be granted a valid key by last.fm
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.ServiceOffline">
	<summary>
 Service Offline - This service is temporarily offline. Try again later.
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.SubscribersOnly">
	<summary>
 This service is only available to paid last.fm subscribers
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.InvalidMethodSignature">
	<summary>
 Invalid method signature supplied
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.InvalidAuthenticationToken">
	<summary>
 Invalid authentication token. Please check username/password supplied
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.TokenExpired">
	<summary>
 The token has expired.
 </summary>
	<remarks></remarks>
</member><member name="F:LastFmLib.API20.modEnums.FailureCode.InvalidDataReturned">
	<summary>
 The data returned from the server were invalid.
 </summary>
	<remarks>Custom error.</remarks>
</member><member name="T:LastFmLib.API20.Tag.TagGetTopTags">
	<summary>
 Fetches the top global tags on Last.fm, sorted by popularity (number of times used) 
 </summary>
</member><member name="T:LastFmLib.API20.Tag.TagGetTopTracks">
	<summary>
 Get the top tracks tagged by this tag, ordered by tag count. 
 </summary>
</member><member name="P:LastFmLib.API20.Types.AuthToken.AutoRefresh">
	<summary>
 Determines if then token should be automatically refreshed
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:LastFmLib.API20.Types.AuthToken.Age">
	<summary>
 The token age in seconds
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:LastFmLib.API20.Types.AuthToken.IsValid">
	<summary>
 Gets a value indicating whether the is valid yet.
 </summary>
	<value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
</member><member name="P:LastFmLib.API20.Types.AuthToken.IsOutdated">
	<summary>
 Gets a value indicating whether the token is outdated.
 </summary>
	<value>
		<c>true</c> if this instance is outdated; otherwise, <c>false</c>.
 </value>
</member><member name="M:LastFmLib.API20.Types.AuthToken.#ctor(LastFmLib.MD5Hash)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.API20.Types.AuthToken"/> class.
 </summary>
	<param name="token">The token.</param>
</member><member name="M:LastFmLib.API20.Types.AuthToken.RequestToken(LastFmLib.MD5Hash)">
	<summary>
 Requests a new token
 </summary>
	<param name="api_key">The api_key.</param>
	<returns>
		<c>true</c> if successful, else <c>false</c>
	</returns>
</member><member name="M:LastFmLib.API20.Types.AuthToken.UpdateTimestamp">
	<summary>
 Updates the timestamp.
 </summary>
</member><member name="T:LastFmLib.API20.Types.AuthToken">
	<summary>
 Stores the auth token. Can determine if it was invalidated.
 </summary>
</member><member name="P:LastFmLib.WebRequests.TrackToIDRequest.Track">
	<summary>
 Gets or sets the track.
 </summary>
	<value>The track.</value>
</member><member name="P:LastFmLib.WebRequests.TrackToIDRequest.isStreamable">
	<summary>
 Gets a value indicating whether the track is streamable.
 </summary>
	<value>
		<c>true</c> if this instance is streamable; otherwise, <c>false</c>.
 </value>
</member><member name="P:LastFmLib.WebRequests.TrackToIDRequest.TrackId">
	<summary>
 Gets the track id.
 </summary>
	<value>The id.</value>
</member><member name="M:LastFmLib.WebRequests.TrackToIDRequest.#ctor(LastFmLib.TypeClasses.Track)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.TrackToIDRequest"/> class.
 </summary>
	<param name="track">The track.</param>
</member><member name="T:LastFmLib.WebRequests.TrackToIDRequest">
	<summary>
 Requests the ID of a track
 </summary>
</member><member name="T:LastFmLib.API20.Auth.AuthGetToken">
	<summary>
 Fetch an unathorized request token for an API account. 
 This is step 2 of the authentication process for desktop applications. 
 Web applications do not need to use this service. 
 </summary>
</member><member name="T:LastFmLib.API20.Events.EventGetInfo">
	<summary>
 Get the metadata for an event on Last.fm. Includes attendance and lineup information. 
 </summary>
</member><member name="T:LastFmLib.API20.Geo.GetToptracks">
	<summary>
 Get the most popular tracks on Last.fm by country 
 </summary>
</member><member name="P:LastFmLib.API20.TasteOMeter.TasteOMeterCompare.Data1">
	<summary>
 The first user/artist or myspace account
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:LastFmLib.API20.TasteOMeter.TasteOMeterCompare.Data2">
	<summary>
 The first user/artist or myspace account
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:LastFmLib.API20.TasteOMeter.TasteOMeterCompare">
	<summary>
 Get a Tasteometer score from two inputs, along with a list of shared artists.
 If the input is a User or a Myspace URL, some additional information is returned. 
 </summary>
</member><member name="T:LastFmLib.API20.Tracks.TrackGetTopFans">
	<summary>
 Get the top fans for this track on Last.fm, based on listening data.
 Supply either track title &amp; artist or mbid.
 </summary>
</member><member name="M:LastFmLib.API20.Types.ArtistSearchResult.#ctor(System.Xml.XmlElement)">
	<summary>
 Creates a new instance of ArtistSearchResult using an xml-element
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:LastFmLib.API20.Types.ArtistSearchResult.FromXmlElement(System.Xml.XmlElement)">
	<summary>
 Creates an instance from an xml element containing the search results
 </summary>
	<param name="elem"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:LastFmLib.API20.Types.ArtistSearchResult">
	<summary>
 Keeps artist search results
 </summary>
</member><member name="T:LastFmLib.API20.Types.RecentTrack">
	<summary>
 Information about a recent track
 </summary>
</member><member name="P:LastFmLib.API20.User.UserGetTopArtists.Result">
	<summary>
 Gets the request result.
 </summary>
	<value>The result.</value>
</member><member name="M:LastFmLib.API20.User.UserGetTopArtists.#ctor(System.String,LastFmLib.API20.modEnums.ChartPeriod)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.API20.User.UserGetTopArtists"/> class.
 </summary>
	<param name="user">The user name</param>
</member><member name="T:LastFmLib.API20.User.UserGetTopArtists">
	<summary>
 Get the top artists listened to by a user.
 You can stipulate a time period. Sends the overall chart by default. 
 </summary>
</member><member name="T:LastFmLib.API20.User.UserGetWeeklyChartList">
	<summary>
 Get a list of available charts for this user, expressed as date ranges which can be sent to the chart services. 
 </summary>
</member><member name="F:LastFmLib.Defaults.Defaults.kSubmissionCacheFilenamePostfix">
	<summary>
 What should be appended as a cache file name for submission. Default is [username]_submissions.xml
 </summary>
	<remarks></remarks>
</member><member name="P:LastFmLib.Radio.XspfResolver.SkipLimit">
	<summary>
 Gets the skip limit(if there is).
 </summary>
	<value>The skip limit.</value>
</member><member name="P:LastFmLib.Radio.XspfResolver.Station">
	<summary>
 Gets the station url
 </summary>
	<value>The station url</value>
</member><member name="M:LastFmLib.Radio.XspfResolver.resolveTracks(System.String)">
	<summary>
 Resolves the tracks from an XSPF-containing string.
 </summary>
	<param name="xspf">The string containing the XSPF.</param>
	<returns></returns>
</member><member name="M:LastFmLib.Radio.XspfResolver.childText(System.Xml.XmlNode,System.String)">
	<summary>
 Returns the text that a child of a parent node contaions
 </summary>
	<param name="parent">The parent node.</param>
	<param name="tagName">Name of the child tag.</param>
	<returns></returns>
</member><member name="M:LastFmLib.Radio.XspfResolver.GetFirstChild(System.Xml.XmlNodeList,System.String)">
	<summary>
 Gets the first child.
 </summary>
	<param name="x">The node list.</param>
	<param name="s">The child name.</param>
	<returns></returns>
</member><member name="M:LastFmLib.Radio.XspfResolver.elementIsNullOrEmpty(System.Xml.XmlElement)">
	<summary>
 returns wheter the xmlElement is empty/nothing or not.
 </summary>
	<param name="location">The location.</param>
	<returns></returns>
</member><member name="T:LastFmLib.Radio.XspfResolver">
	<summary>
 Resolves the XSPF playlist received from Last.fm
 </summary>
</member><member name="T:LastFmLib.TypeClasses.WeightedString">
	<summary>
 This class is used for all SimilarXXX things, like SimilarTagsRequest. Each item has a name and a weighting by which it can be sorted.
 </summary>
</member><member name="T:LastFmLib.WebRequests.FriendsRequest">
	<summary>
 Requests a friend list for a user.
 </summary>
</member><member name="T:LastFmLib.WebRequests.SearchTagRequest">
	<summary>
 Searches for a Ta
 </summary>
</member><member name="T:LastFmLib.API20.Album.AlbumGetInfo">
	<summary>
 Get the metadata for an album on Last.fm using the album name or a musicbrainz id. 
 See playlist.fetch on how to get the album playlist. 
 </summary>
	<remarks></remarks>
</member><member name="T:LastFmLib.API20.Artist.ArtistGetTopTracks">
	<summary>
 Get the top tracks by an artist on Last.fm, ordered by popularity 
 </summary>
</member><member name="T:LastFmLib.API20.Types.UserInfo">
	<summary>
 Class for storing user information, like name, url as image urls
 </summary>
</member><member name="M:LastFmLib.API20.User.UserGetTopAlbums.#ctor(System.String,LastFmLib.API20.modEnums.ChartPeriod)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.API20.User.UserGetTopAlbums"/> class.
 </summary>
	<param name="uname">The username.</param>
	<param name="period">The time period of the chars.</param>
</member><member name="T:LastFmLib.API20.User.UserGetTopAlbums">
	<summary>
 Get the top albums listened to by a user. You can stipulate a time period. Sends the overall chart by default. 
 </summary>
</member><member name="T:LastFmLib.API20.User.UserGetWeeklyalbumChart">
	<summary>
 Get an album chart for a user profile, for a given date range.
 If no date range is supplied, it will return the most recent album chart for this user. 
 </summary>
</member><member name="M:LastFmLib.Util.GetSubElementValue(System.Xml.XmlElement,System.String,System.Xml.XmlNamespaceManager)">
	<summary>
 Gets the value of en sub-element of an xml-element
 </summary>
	<param name="e">The parent element</param>
	<param name="name">the child element's name</param>
	<returns>The inner text of the child element</returns>
	<remarks></remarks>
</member><member name="M:LastFmLib.Util.GetUrl(System.String)">
	<summary>
 Helper function to get an url from a (maybe empty) string
 </summary>
	<param name="s"></param>
	<returns>an Uri</returns>
	<remarks></remarks>
</member><member name="M:LastFmLib.LastFmClient.Login">
	<summary>
 Logins this user and sets the SessionID property if successful.
 </summary>
	<returns>
 The TypeClasses.Handshake instance which was used.
 </returns>
	<remarks>It is recommended to keep the result in a variable for reuse. 
 You may need it e.g. for the base url and the base path of the requests(if they were changed^^)
 and to view the error message if the handshake failed.</remarks>
</member><member name="M:LastFmLib.LastFmClient.GetRadioPlaylist(System.String)">
	<summary>
 Gets the radio playlist for this user.
 </summary>
	<param name="BasePath">The base path.</param>
	<returns></returns>
	<exception cref="T:System.InvalidOperationException">Thrown if the session ID is not set.</exception>
</member><member name="M:LastFmLib.LastFmClient.GetCurrentlyPlayingTrackMetaData">
	<summary>
 Gets the meta data of the currently playing track. Track needs to be streamed(means downloaded) to get info!
 </summary>
	<returns>
 If successful, a MetaData is returned, else <c>null</c>
	</returns>
</member><member name="M:LastFmLib.LastFmClient.GetOverallTopTags">
	<summary>
 Gets the overall top tags.
 </summary>
	<returns>
 If successful, a WeightedStringList is returned, else <c>null</c>
	</returns>
</member><member name="T:LastFmLib.API20.Album.AlbumRemoveTag">
	<summary>
 Remove a user's tag from an album. 
 </summary>
	<remarks></remarks>
</member><member name="T:LastFmLib.API20.Artist.ArtistAddTags">
	<summary>
 Tag an artist with one or more user supplied tags. 
 </summary>
	<remarks></remarks>
</member><member name="T:LastFmLib.API20.Tag.TagGetTopAlbums">
	<summary>
 Get the top albums tagged by this tag, ordered by tag count. 
 </summary>
</member><member name="M:LastFmLib.WebRequests.OverallTopTagsRequest.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.OverallTopTagsRequest"/> class.
 </summary>
</member><member name="T:LastFmLib.WebRequests.OverallTopTagsRequest">
	<summary>
 Gets the overall top tags.
 </summary>
</member><member name="M:LastFmLib.WebRequests.UserAlbumTagsRequest.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.UserAlbumTagsRequest"/> class.
 </summary>
</member><member name="M:LastFmLib.WebRequests.UserAlbumTagsRequest.#ctor(System.String,System.String,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.UserAlbumTagsRequest"/> class.
 </summary>
	<param name="username">The username.</param>
	<param name="album">The album name.</param>
</member><member name="T:LastFmLib.WebRequests.UserAlbumTagsRequest">
	<summary>
 Requests the user's album tags
 </summary>
</member><member name="T:LastFmLib.API20.Groups.GroupGetWeeklyTrackChart">
	<summary>
 Get a track chart for a group, for a given date range. If no date range is supplied, it will return the most recent album chart for this group. 
 </summary>
</member><member name="T:LastFmLib.API20.Types.ChartInfo">
	<summary>
 Class for storing weekly chart data.
 </summary>
</member><member name="T:LastFmLib.API20.Types.GroupWeeklyChartList">
	<summary>
 Weekly chart list for a group
 </summary>
</member><member name="T:LastFmLib.API20.User.UserGetNeighbours">
	<summary>
 Get a list of a user's neighbours on Last.fm. 
 </summary>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerInit.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.Scrobbler.ScrobblerInit"/> class.
 </summary>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerInit.#ctor(LastFmLib.TypeClasses.LastFmUser,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.Scrobbler.ScrobblerInit"/> class.
 </summary>
	<param name="theuser">The LastFmUser-instance.</param>
	<param name="versionString">The version string. If unset, this will be set to My.Application.Info.Version.ToString</param>
</member><member name="T:LastFmLib.Scrobbler.ScrobblerInit">
	<summary>
 Class needed for initializing a Scrobbler(Manager/-Cache).
 </summary>
</member><member name="F:LastFmLib.Scrobbler.Structs.ScrobblerStatus.Connecting">
	<summary>
 Connecting.
 </summary>
</member><member name="F:LastFmLib.Scrobbler.Structs.ScrobblerStatus.Handshaken">
	<summary>
 Handshake was made.
 </summary>
</member><member name="F:LastFmLib.Scrobbler.Structs.ScrobblerStatus.Scrobbling">
	<summary>
 Scrobbling
 </summary>
</member><member name="F:LastFmLib.Scrobbler.Structs.ScrobblerStatus.TracksScrobbled">
	<summary>
 Tracks were scrobbled.
 </summary>
</member><member name="F:LastFmLib.Scrobbler.Structs.ScrobblerStatus.TracksNotScrobbled">
	<summary>
 Tracks weren't scrobbled
 </summary>
</member><member name="F:LastFmLib.Scrobbler.Structs.ScrobblerStatus.StatusMax">
	<summary>
 Dummy var for ScrobblerError enum
 </summary>
</member><member name="T:LastFmLib.Scrobbler.Structs.ScrobblerStatus">
	<summary>
 The scrobbler Status
 </summary>
</member><member name="F:LastFmLib.Scrobbler.Structs.ScrobblerError.BadSession">
	<summary>
 Bad session ID
 </summary>
</member><member name="F:LastFmLib.Scrobbler.Structs.ScrobblerError.BannedClient">
	<summary>
 Client is banned.
 </summary>
</member><member name="F:LastFmLib.Scrobbler.Structs.ScrobblerError.BadAuthorisation">
	<summary>
 Bad Authorisation.
 </summary>
</member><member name="F:LastFmLib.Scrobbler.Structs.ScrobblerError.BadTime">
	<summary>
 Timstamp wrong.
 </summary>
</member><member name="F:LastFmLib.Scrobbler.Structs.ScrobblerError.NotInitialized">
	<summary>
 Scrobbler is not initialized
 </summary>
</member><member name="F:LastFmLib.Scrobbler.Structs.ScrobblerError.NoError">
	<summary>
 No error.
 </summary>
</member><member name="T:LastFmLib.Scrobbler.Structs.ScrobblerError">
	<summary>
 Enum for types of scrobbler errors. Min value is ScrobblerStatus.StatusMax.
 </summary>
</member><member name="T:LastFmLib.QMimeData">
	<summary>
 Thought I ported Trolltechs QMimeData Class. Get/SetData Methods aren't implemented yet.
 </summary>
</member><member name="M:LastFmLib.WebRequests.GetXspfPlaylistRequest.#ctor(System.String@,System.String@)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.GetXspfPlaylistRequest"/> class.
 </summary>
	<param name="session">The sessionId.</param>
	<param name="basePath">The base path.</param>
</member><member name="M:LastFmLib.WebRequests.GetXspfPlaylistRequest.#ctor(System.String@)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.GetXspfPlaylistRequest"/> class.
 </summary>
	<param name="session">The sessionId.</param>
</member><member name="M:LastFmLib.WebRequests.GetXspfPlaylistRequest.Start(System.Boolean)">
	<summary>
 Starts the Request.
 </summary>
	<param name="doasync">If set to <c>true</c> then the request is made asynchronously.</param>
</member><member name="P:LastFmLib.WebRequests.RecentTracksRequest.TrackList">
	<summary>
 Gets the track list.
 </summary>
	<value>The track list.</value>
</member><member name="T:LastFmLib.WebRequests.RecentTracksRequest">
	<summary>
 Request for getting the recently played tracks of a user
 </summary>
</member><member name="P:LastFmLib.WebRequests.UserTopListenedArtistsRequest.ChartTimeSpan">
	<summary>
 Gets or sets the time span of which the chart should be generated
 </summary>
	<value>The chart time span.</value>
</member><member name="P:LastFmLib.WebRequests.UserTopListenedArtistsRequest.Artists">
	<summary>
 Gets the artists.
 </summary>
	<value>The artists.</value>
</member><member name="P:LastFmLib.WebRequests.UserTopListenedArtistsRequest.User">
	<summary>
 Gets or sets the username
 </summary>
	<value>The user.</value>
</member><member name="M:LastFmLib.WebRequests.UserTopListenedArtistsRequest.#ctor(System.String,LastFmLib.WebRequests.modEnums.TopXTimeSpan)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.UserTopListenedArtistsRequest"/> class.
 </summary>
	<param name="username">The username.</param>
	<param name="ts">The time span of which the chart should be generated.</param>
</member><member name="T:LastFmLib.WebRequests.UserTopListenedArtistsRequest">
	<summary>
 Gets the top listened artists of a user
 </summary>
</member><member name="P:LastFmLib.WebRequests.VerifyUserRequest.BootStrapCode">
	<summary>
 Gets the boot strap code.
 </summary>
	<value>The boot strap code.</value>
</member><member name="P:LastFmLib.WebRequests.VerifyUserRequest.UserAuthCode">
	<summary>
 Gets the user auth code.
 </summary>
	<value>The user auth code.</value>
</member><member name="P:LastFmLib.WebRequests.VerifyUserRequest.PasswordMD5Lower">
	<summary>
 Gets or sets the password Md5 lower.
 </summary>
	<value>The password M d5 lower.</value>
</member><member name="P:LastFmLib.WebRequests.VerifyUserRequest.PasswordMD5">
	<summary>
 Gets or sets the password Md5.
 </summary>
	<value>The password M d5.</value>
</member><member name="P:LastFmLib.WebRequests.VerifyUserRequest.Username">
	<summary>
 Gets or sets the username.
 </summary>
	<value>The username.</value>
</member><member name="M:LastFmLib.WebRequests.VerifyUserRequest.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.VerifyUserRequest"/> class.
 </summary>
</member><member name="T:LastFmLib.WebRequests.VerifyUserRequest">
	<summary>
 Verifies a user
 </summary>
</member><member name="T:LastFmLib.API20.Artist.ArtistGetTopAlbums">
	<summary>
 Get the top albums for an artist on Last.fm, ordered by popularity. 
 </summary>
</member><member name="P:LastFmLib.API20.Base.BaseWeeklyChartList.Charts">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:LastFmLib.API20.Events.EventAttend">
	<summary>
 Set a user's attendance status for an event. 
 </summary>
</member><member name="T:LastFmLib.API20.Groups.GroupGetWeeklyChartList">
	<summary>
 Get a list of available charts for this group, expressed as date ranges which can be sent to the chart services. 
 </summary>
</member><member name="E:LastFmLib.Radio.RadioPlaylist.playlistLoaded">
	<summary>
 Occurs when the playlist is loaded.
 </summary>
</member><member name="E:LastFmLib.Radio.RadioPlaylist.error">
	<summary>
 Occurs when an error occured.
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.TypeEnum.Type_Station">
	<summary>
 Station
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.TypeEnum.Type_Playlist">
	<summary>
 Playlist
 </summary>
</member><member name="T:LastFmLib.Radio.RadioPlaylist.TypeEnum">
	<summary>
 The RadioPlaylist's request Type
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.RadioError.Radio_BadPlaylist">
	<summary>
 Playlist Invalid
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.RadioError.Radio_InvalidUrl">
	<summary>
 Url invalid
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.RadioError.Radio_InvalidAuth">
	<summary>
 Authentication invalid
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.RadioError.Radio_TooManyRetries">
	<summary>
 There were too many retries
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.RadioError.Radio_TrackNotFound">
	<summary>
 The track was not found
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.RadioError.Radio_SkipLimitExceeded">
	<summary>
 The skip limit was exceeded
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.RadioError.Radio_IllegalResume">
	<summary>
 Tried to resume illegally
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.RadioError.Radio_OutOfPlaylist">
	<summary>
 No more playlists available
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.RadioError.Radio_PluginLoadFailed">
	<summary>
 Failed to load a plugin
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.RadioError.Radio_NoSoundcard">
	<summary>
 No Soundcard available
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.RadioError.Radio_PlaybackError">
	<summary>
 Error during playback
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.RadioError.Radio_ConnectionRefused">
	<summary>
 Connection was refused
 </summary>
</member><member name="F:LastFmLib.Radio.RadioPlaylist.RadioError.Radio_UnknownError">
	<summary>
 An unknown errror occured
 </summary>
</member><member name="T:LastFmLib.Radio.RadioPlaylist.RadioError">
	<summary>
 An enum for radio errors
 </summary>
</member><member name="P:LastFmLib.Radio.RadioPlaylist.SessionID">
	<summary>
 Gets the sessionID
 </summary>
	<value>The session.</value>
</member><member name="P:LastFmLib.Radio.RadioPlaylist.Type">
	<summary>
 Gets the current Request Type.
 </summary>
</member><member name="P:LastFmLib.Radio.RadioPlaylist.hasMore">
	<summary>
 Gets a value indicating whether this instance has more items in .
 </summary>
	<value><c>true</c> if this instance has more; otherwise, <c>false</c>.</value>
</member><member name="P:LastFmLib.Radio.RadioPlaylist.size">
	<summary>
 Gets the amount of tracks in the plalist
 </summary>
</member><member name="P:LastFmLib.Radio.RadioPlaylist.isOutOfContent">
	<summary>
 Gets a value indicating whether this instance is out of content.
 </summary>
	<value>
		<c>true</c> if this instance is out of content; otherwise, <c>false</c>.
 </value>
</member><member name="P:LastFmLib.Radio.RadioPlaylist.currentTrack">
	<summary>
 Gets the current track.
 </summary>
	<value>The current track.</value>
</member><member name="M:LastFmLib.Radio.RadioPlaylist.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.Radio.RadioPlaylist"/> class.
 </summary>
</member><member name="M:LastFmLib.Radio.RadioPlaylist.setSession(System.String)">
	<summary>
 Sets the session and then requests the playlist.
 </summary>
	<param name="session">The sessionID.</param>
</member><member name="M:LastFmLib.Radio.RadioPlaylist.setBasePath(System.String)">
	<summary>
 Sets the base path.
 </summary>
	<param name="path">The path.</param>
</member><member name="M:LastFmLib.Radio.RadioPlaylist.setXspf(System.String)">
	<summary>
 Sets the XSPF and parses it
 </summary>
	<param name="xspf">The XSPF containing string.</param>
</member><member name="M:LastFmLib.Radio.RadioPlaylist.clear">
	<summary>
 Clears the playlist
 </summary>
</member><member name="M:LastFmLib.Radio.RadioPlaylist.abort">
	<summary>
 Aborts the current Request
 </summary>
</member><member name="M:LastFmLib.Radio.RadioPlaylist.discardRemaining">
	<summary>
 Discards the remaining tracks and requests a new playlist.
 </summary>
</member><member name="M:LastFmLib.Radio.RadioPlaylist.nextTrack">
	<summary>
 moves to the next Track
 </summary>
	<returns></returns>
</member><member name="M:LastFmLib.Radio.RadioPlaylist.requestPlaylistChunk(System.Boolean)">
	<summary>
 Requests the playlist chunk.
 </summary>
</member><member name="M:LastFmLib.Radio.RadioPlaylist.xspfPlaylistRequestReturn(LastFmLib.WebRequests.RequestBase@)">
	<summary>
 Handles the result of the playlist Request
 </summary>
	<param name="request">The request.</param>
</member><member name="M:LastFmLib.Radio.RadioPlaylist.parseXspf(System.String)">
	<summary>
 Parses the XSPF.
 </summary>
	<param name="xspf">The XSPF.</param>
</member><member name="T:LastFmLib.Radio.RadioPlaylist">
	<summary>
 A class for obtaining a radio playlist from Last.fm.
 For download paths use the path property of the currentTrack property.
 Use setSession to initially download a new playlist chunk.
 </summary>
</member><member name="T:LastFmLib.TypeClasses.WeightedStringList">
	<summary>
 A list of WeightedStrings, with the possibilty to sort them.
 </summary>
</member><member name="P:LastFmLib.WebRequests.SimilarTagsRequest.Tag">
	<summary>
 The tag of which the similar ones should be requested.
 </summary>
	<value>The tag.</value>
</member><member name="M:LastFmLib.WebRequests.SimilarTagsRequest.#ctor(System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.SimilarTagsRequest"/> class.
 </summary>
	<param name="tag">The tag of which the similar ones should be requested.</param>
</member><member name="T:LastFmLib.WebRequests.SimilarTagsRequest">
	<summary>
 Requests a list of tags which are similiar to a tag.
 </summary>
</member><member name="P:LastFmLib.WebRequests.UserTagsRequest.path">
	<summary>
 Gets the path(relative to the user's url)
 </summary>
	<value>The path.</value>
</member><member name="P:LastFmLib.WebRequests.UserTagsRequest.Username">
	<summary>
 Gets or sets the username.
 </summary>
	<value>The username.</value>
</member><member name="M:LastFmLib.WebRequests.UserTagsRequest.#ctor(LastFmLib.WebRequests.modEnums.RequestType,System.String@)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.UserTagsRequest"/> class.
 </summary>
	<param name="requesttype">The requesttype.</param>
	<param name="name">The name.</param>
</member><member name="M:LastFmLib.WebRequests.UserTagsRequest.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.UserTagsRequest"/> class.
 </summary>
</member><member name="M:LastFmLib.WebRequests.UserTagsRequest.#ctor(System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.UserTagsRequest"/> class.
 </summary>
	<param name="user">The username.</param>
</member><member name="T:LastFmLib.WebRequests.UserTagsRequest">
	<summary>
 Gets the personal tags of a user
 </summary>
</member><member name="T:LastFmLib.API20.Album.AlbumAddTags">
	<summary>
 Tag an album using a list of user supplied tags. 
 </summary>
	<remarks></remarks>
</member><member name="T:LastFmLib.API20.Auth.AuthGetSession">
	<summary>
 Fetch a session key for a user. 
 The third step in the authentication process. See the authentication how-to for more information. 
 </summary>
</member><member name="T:LastFmLib.API20.Types.Playlist">
	<summary>
 Class for holding playlists. Not implemented yet
 </summary>
</member><member name="M:LastFmLib.API20.Types.UserWeeklyChartList.#ctor(System.Xml.XmlElement)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.API20.Types.UserWeeklyChartList"/> class.
 </summary>
	<param name="e">The e.</param>
</member><member name="M:LastFmLib.API20.Types.UserWeeklyChartList.FromXmlElement(System.Xml.XmlElement)">
	<summary>
 Creates an instance from an xml element
 </summary>
	<param name="e">The e.</param>
	<returns>
 If successful, a UserWeeklyChartList is returned, else <c>null</c>
	</returns>
</member><member name="T:LastFmLib.API20.User.UserGetEvents">
	<summary>
 Get a list of events that this user is attending. Easily integratable into calendars, using the ical standard (see 'more formats' section below). 
 </summary>
</member><member name="P:LastFmLib.TypeClasses.Artist.Image">
	<summary>
 Gets or sets the image url
 </summary>
	<value>The image url.</value>
</member><member name="P:LastFmLib.TypeClasses.Artist.ImageSmall">
	<summary>
 Gets or sets url for the small image.
 </summary>
</member><member name="P:LastFmLib.TypeClasses.Artist.Url">
	<summary>
 Gets or sets the URL of the artist page
 </summary>
	<value>The URL.</value>
</member><member name="P:LastFmLib.TypeClasses.Artist.PlayCount">
	<summary>
 Gets or sets the play count for this artist
 </summary>
	<value>The play count.</value>
</member><member name="P:LastFmLib.TypeClasses.Artist.mbId">
	<summary>
 Gets or sets the MusicBrainz ID.
 </summary>
	<value>The mb id.</value>
</member><member name="P:LastFmLib.TypeClasses.Artist.Name">
	<summary>
 Gets or sets the name of the artist
 </summary>
	<value>The name.</value>
</member><member name="M:LastFmLib.TypeClasses.Artist.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.TypeClasses.Artist"/> class.
 </summary>
</member><member name="M:LastFmLib.TypeClasses.Artist.#ctor(System.String,System.Uri,System.Uri,System.Uri,System.Int32,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.TypeClasses.Artist"/> class.
 </summary>
	<param name="name">The name.</param>
	<param name="url">The URL.</param>
	<param name="ImageUrl">The image URL.</param>
	<param name="ImageSmallUrl">The URL to the small image.</param>
	<param name="playcount">The playcount.</param>
	<param name="mbid">The mbid.</param>
</member><member name="T:LastFmLib.TypeClasses.Artist">
	<summary>
 The Artist class contains things related to an artist, such as image urls, play count,MusicBrainz ID,...
 </summary>
</member><member name="P:LastFmLib.API20.Base.BaseRequest.RequestTimeout">
	<summary>
 Gets or sets the request timeout(in milliseconds).
 </summary>
	<value>The request timeout. Minimum is 1000.</value>
	<exception cref="T:System.ArgumentOutOfRangeException">Thrown if the timeout is set to less than 1000 milliseconds.</exception>
</member><member name="P:LastFmLib.API20.Base.BaseRequest.BasePath">
	<summary>
 Gets or sets the base path(default is "/2.0").
 </summary>
	<value>The base path.</value>
</member><member name="P:LastFmLib.API20.Base.BaseRequest.BaseHost">
	<summary>
 Gets or sets the base host(default is "ws.audioscrobbler.com").
 </summary>
	<value>The base host .</value>
</member><member name="P:LastFmLib.API20.Base.BaseRequest.RequestData">
	<summary>
 Gets or sets the request data.
 </summary>
	<value>The data.</value>
</member><member name="P:LastFmLib.API20.Base.BaseRequest.Name">
	<summary>
 Gets or sets the name of the request.
 </summary>
	<value>The name.</value>
</member><member name="P:LastFmLib.API20.Base.BaseRequest.Type">
	<summary>
 Gets or sets the type of the request.
 </summary>
	<value>The type.</value>
</member><member name="P:LastFmLib.API20.Base.BaseRequest.ResponseHeaderCode">
	<summary>
 Gets the response header code.
 </summary>
</member><member name="P:LastFmLib.API20.Base.BaseRequest.resultCode">
	<summary>
 Gets the result code(if it was successful or type of error).
 </summary>
</member><member name="P:LastFmLib.API20.Base.BaseRequest.failed">
	<summary>
 Gets a value indicating whether this request failed.
 </summary>
	<value><c>true</c> if failed; otherwise, <c>false</c>.</value>
</member><member name="P:LastFmLib.API20.Base.BaseRequest.succeeded">
	<summary>
 Gets a value indicating whether this request was successful.
 </summary>
	<value><c>true</c> if succeeded; otherwise, <c>false</c>.</value>
</member><member name="P:LastFmLib.API20.Base.BaseRequest.aborted">
	<summary>
 Gets a value indicating whether this request was aborted.
 </summary>
	<value><c>true</c> if aborted; otherwise, <c>false</c>.</value>
</member><member name="P:LastFmLib.API20.Base.BaseRequest.errorMessage">
	<summary>
 Gets the error message, if there is one.
 </summary>
	<value>The error message.</value>
</member><member name="P:LastFmLib.API20.Base.BaseRequest.autoDelete">
	<summary>
 Unknown functionality. Probably for request cache, dunno.
 </summary>
	<value><c>true</c> if [auto delete]; otherwise, <c>false</c>.</value>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.API20.Base.BaseRequest"/> class.
 </summary>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.#ctor(LastFmLib.API20.modEnums.RequestType,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.API20.Base.BaseRequest"/> class.
 </summary>
	<param name="type">The type of the request.</param>
	<param name="name">The name of the request.</param>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.Start">
	<summary>
 Starts the request and gets the response.
 </summary>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.Start(System.Boolean)">
	<summary>
 Starts the Request.
 </summary>
	<param name="doasync">If set to <c>true</c> then the request is made asynchronously.</param>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.Abort">
	<summary>
 Aborts the Request.
 </summary>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.TryAgain">
	<summary>
 Does a retry until MAX_RETRIES by launching the Start() method
 </summary>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.get(System.String,System.String,System.Boolean)">
	<summary>
 Retrieves the Request asyncronous using the GET Method. If successful, success() is called.
 </summary>
	<param name="host">The host.</param>
	<param name="path">The path.</param>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.get(System.String,System.Boolean)">
	<summary>
 Retrieves the Request asyncronous using the GET Method. If successful, success() is called.
 </summary>
	<param name="path">The RELATIVE path(baseHost is added before "path").</param>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.get(System.Uri,System.Boolean)">
	<summary>
 Retrieves the Request asyncronous using the GET Method. If successful, success() is called.
 </summary>
	<param name="path">The absolute System.Uri from where it is tried to get the request/response</param>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.DoGetAsyncCallBack(System.IAsyncResult)">
	<summary>
 Here deriving classes can handle the async callback of the DoGet(True)-Method
 </summary>
	<param name="ar">The ar.</param>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.PostPrivate(System.Uri,System.String@)">
	<summary>
 Does the request using the "POST"-method.
 </summary>
	<param name="url">The POST url.</param>
	<param name="data">The data which should be posted</param>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.DoRequestAsyncCallBack(System.IAsyncResult)">
	<summary>
 Here deriving classes can handle the async callback of the DoRequest(True)-Method
 </summary>
	<param name="ar">The ar.</param>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.setFailed(LastFmLib.API20.modEnums.FailureCode,System.String)">
	<summary>
 Sets the reason why the request failed
 </summary>
	<param name="failureCode">FailureCode</param>
	<param name="message">The message.</param>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.HeaderReceived(System.Net.HttpWebResponse@)">
	<summary>
 Called if the Response header was received. Returns if the status code is "200 OK" or not
 </summary>
	<param name="h">The HTTPWebResponse.</param>
	<returns></returns>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.EscapeUriData(System.String)">
	<summary>
 Escapes a string to and uri conform string.
 </summary>
	<param name="data">The data.</param>
	<returns></returns>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.UnEscapeUriData(System.String)">
	<summary>
 Converts a URI-Escaped string into human-readable data.
 </summary>
	<param name="data">The data.</param>
	<returns></returns>
</member><member name="M:LastFmLib.API20.Base.BaseRequest.GetMethodSignatureHash(System.Boolean)">
	<summary>
 Gets the method signature hash required for authentication.
 </summary>
	<param name="autoRefreshToken">Determines if the token should be refreshed automtatically if it was invalidated.</param>
	<returns>An <see cref="T:LastFmLib.MD5Hash">MD5-Hash</see> as method signature. If the token refresh fails Nothing is returned.</returns>
	<remarks></remarks>
</member><member name="T:LastFmLib.API20.Base.BaseRequest">
	<summary>
 This is the base class for all requests. To create(means code) a new request, just inherit this class.
 </summary>
</member><member name="P:LastFmLib.WebRequests.RequestBase.RequestTimeout">
	<summary>
 Gets or sets the request timeout(in milliseconds).
 </summary>
	<value>The request timeout. Minimum is 1000.</value>
	<exception cref="T:System.ArgumentOutOfRangeException">Thrown if the timeout is set to less than 1000 milliseconds.</exception>
</member><member name="P:LastFmLib.WebRequests.RequestBase.BasePath">
	<summary>
 Gets or sets the base path(default is "/radio").
 </summary>
	<value>The base path.</value>
</member><member name="P:LastFmLib.WebRequests.RequestBase.BaseHost">
	<summary>
 Gets or sets the base host(default is "ws.audioscrobbler.com").
 </summary>
	<value>The base host .</value>
</member><member name="P:LastFmLib.WebRequests.RequestBase.RequestData">
	<summary>
 Gets or sets the request data.
 </summary>
	<value>The data.</value>
</member><member name="P:LastFmLib.WebRequests.RequestBase.Name">
	<summary>
 Gets or sets the name of the request.
 </summary>
	<value>The name.</value>
</member><member name="P:LastFmLib.WebRequests.RequestBase.Type">
	<summary>
 Gets or sets the type of the request.
 </summary>
	<value>The type.</value>
</member><member name="P:LastFmLib.WebRequests.RequestBase.ResponseHeaderCode">
	<summary>
 Gets the response header code.
 </summary>
</member><member name="P:LastFmLib.WebRequests.RequestBase.resultCode">
	<summary>
 Gets the result code(if it was successful or type of error).
 </summary>
</member><member name="P:LastFmLib.WebRequests.RequestBase.failed">
	<summary>
 Gets a value indicating whether this request failed.
 </summary>
	<value><c>true</c> if failed; otherwise, <c>false</c>.</value>
</member><member name="P:LastFmLib.WebRequests.RequestBase.succeeded">
	<summary>
 Gets a value indicating whether this request was successful.
 </summary>
	<value><c>true</c> if succeeded; otherwise, <c>false</c>.</value>
</member><member name="P:LastFmLib.WebRequests.RequestBase.aborted">
	<summary>
 Gets a value indicating whether this request was aborted.
 </summary>
	<value><c>true</c> if aborted; otherwise, <c>false</c>.</value>
</member><member name="P:LastFmLib.WebRequests.RequestBase.errorMessage">
	<summary>
 Gets the error message, if there is one.
 </summary>
	<value>The error message.</value>
</member><member name="P:LastFmLib.WebRequests.RequestBase.autoDelete">
	<summary>
 Unknown functionality. Probably for request cache, dunno.
 </summary>
	<value><c>true</c> if [auto delete]; otherwise, <c>false</c>.</value>
</member><member name="M:LastFmLib.WebRequests.RequestBase.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.RequestBase"/> class.
 </summary>
</member><member name="M:LastFmLib.WebRequests.RequestBase.#ctor(LastFmLib.WebRequests.modEnums.RequestType,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.RequestBase"/> class.
 </summary>
	<param name="type">The type of the request.</param>
	<param name="name">The name of the request.</param>
</member><member name="M:LastFmLib.WebRequests.RequestBase.Start">
	<summary>
 Starts the request and gets the response. Should be overrridden.
 </summary>
</member><member name="M:LastFmLib.WebRequests.RequestBase.Start(System.Boolean)">
	<summary>
 Starts the Request.
 </summary>
	<param name="doasync">If set to <c>true</c> then the request is made asynchronously.</param>
</member><member name="M:LastFmLib.WebRequests.RequestBase.Abort">
	<summary>
 Aborts the Request.
 </summary>
</member><member name="M:LastFmLib.WebRequests.RequestBase.TryAgain">
	<summary>
 Does a retry until MAX_RETRIES by launching the Start() method
 </summary>
</member><member name="M:LastFmLib.WebRequests.RequestBase.get(System.String,System.String,System.Boolean)">
	<summary>
 Retrieves the Request asyncronous using the GET Method. If successful, success() is called.
 </summary>
	<param name="host">The host.</param>
	<param name="path">The path.</param>
</member><member name="M:LastFmLib.WebRequests.RequestBase.get(System.String,System.Boolean)">
	<summary>
 Retrieves the Request asyncronous using the GET Method. If successful, success() is called.
 </summary>
	<param name="path">The RELATIVE path(baseHost is added before "path").</param>
</member><member name="M:LastFmLib.WebRequests.RequestBase.get(System.Uri,System.Boolean)">
	<summary>
 Retrieves the Request asyncronous using the GET Method. If successful, success() is called.
 </summary>
	<param name="path">The absolute System.Uri from where it is tried to get the request/response</param>
</member><member name="M:LastFmLib.WebRequests.RequestBase.DoGetAsyncCallBack(System.IAsyncResult)">
	<summary>
 Here deriving classes can handle the async callback of the DoGet(True)-Method
 </summary>
	<param name="ar">The ar.</param>
</member><member name="M:LastFmLib.WebRequests.RequestBase.DoRequest(LastFmLib.WebRequests.XMLRpc@)">
	<summary>
 Does the request using the "POST"-method.
 </summary>
	<param name="rpc">The RPC.</param>
</member><member name="M:LastFmLib.WebRequests.RequestBase.DoRequestAsyncCallBack(System.IAsyncResult)">
	<summary>
 Here deriving classes can handle the async callback of the DoRequest(True)-Method
 </summary>
	<param name="ar">The ar.</param>
</member><member name="M:LastFmLib.WebRequests.RequestBase.success(System.String)">
	<summary>
 Is called if the request was successful. 
 </summary>
	<param name="data">The data.</param>
</member><member name="M:LastFmLib.WebRequests.RequestBase.success(System.Byte[])">
	<summary>
 Is called if the request was successful. Converts Bytes to UTF-8 and calls success(String).
 </summary>
	<param name="data">The data.</param>
</member><member name="M:LastFmLib.WebRequests.RequestBase.success(System.Net.WebResponse)">
	<summary>
 Is called if the request was successful. Calls success(byte()).
 </summary>
	<param name="response">The response.</param>
</member><member name="M:LastFmLib.WebRequests.RequestBase.setFailed(LastFmLib.WebRequests.RequestBase.WebRequestResultCode,System.String)">
	<summary>
 Sets the reason why the request failed
 </summary>
	<param name="type">The type.</param>
	<param name="message">The message.</param>
</member><member name="M:LastFmLib.WebRequests.RequestBase.parameter(System.String,System.String)">
	<summary>
 Gets the value of a Key-Value-Pair(e.g Abc=bbbb)-string if name can be found in the data string
 </summary>
	<param name="keyname">The keyname.</param>
	<param name="data">The data string.</param>
	<returns></returns>
</member><member name="M:LastFmLib.WebRequests.RequestBase.HeaderReceived(System.Net.HttpWebResponse@)">
	<summary>
 Called if the Response header was received. Returns if the status code is "200 OK" or not
 </summary>
	<param name="h">The HTTPWebResponse.</param>
	<returns></returns>
</member><member name="M:LastFmLib.WebRequests.RequestBase.EscapeUriData(System.String)">
	<summary>
 Escapes a string to and uri conform string.
 </summary>
	<param name="data">The data.</param>
	<returns></returns>
</member><member name="M:LastFmLib.WebRequests.RequestBase.UnEscapeUriData(System.String)">
	<summary>
 Converts a URI-Escaped string into human-readable data.
 </summary>
	<param name="data">The data.</param>
	<returns></returns>
</member><member name="M:LastFmLib.WebRequests.RequestBase.ToXmlElement(System.Xml.XmlDocument@)">
	<summary>
 Serialzes this instance into an - for RequestCache - valid XmlElement
 </summary>
	<param name="doc">The XmlDocument</param>
	<returns>
 If successful, a XmlElement is returned, else <c>null</c>
	</returns>
</member><member name="T:LastFmLib.WebRequests.RequestBase">
	<summary>
 This is the base class for all requests. To create(means code) a new request, just inherit this class.
 </summary>
</member><member name="M:LastFmLib.WebRequests.ArtistMetadataRequest.#ctor(System.Xml.XmlElement)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.ArtistMetadataRequest"/> class. For doing so it deserializes and xml element.
 </summary>
	<param name="e">The xml element.</param>
</member><member name="M:LastFmLib.WebRequests.ArtistMetadataRequest.InitFromXmlElement(System.Xml.XmlElement)">
	<summary>
 Initializes an instance of this class by deserializing an XmlElement
 </summary>
	<param name="e">The data.</param>
	<returns>
 If successful, a ArtistMetadataRequest is returned, else <c>null</c>
	</returns>
</member><member name="P:LastFmLib.WebRequests.ReportRebufferingRequest.Username">
	<summary>
 Gets or sets the username.
 </summary>
	<value>The username.</value>
</member><member name="P:LastFmLib.WebRequests.ReportRebufferingRequest.StreamerHost">
	<summary>
 Gets or sets the streamer host.
 </summary>
	<value>The streamer host.</value>
</member><member name="M:LastFmLib.WebRequests.ReportRebufferingRequest.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.ReportRebufferingRequest"/> class.
 </summary>
</member><member name="M:LastFmLib.WebRequests.ReportRebufferingRequest.#ctor(System.String,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.ReportRebufferingRequest"/> class.
 </summary>
	<param name="username">The username.</param>
	<param name="streamerHost_">The streamer host_.</param>
</member><member name="M:LastFmLib.WebRequests.ReportRebufferingRequest.Start">
	<summary>
 Starts the request and gets the response.
 </summary>
</member><member name="T:LastFmLib.WebRequests.ReportRebufferingRequest">
	<summary>
 Reports the rebuffering of the client -.-
 </summary>
</member><member name="T:LastFmLib.API20.Artist.ArtistGetSimilar">
	<summary>
 Get all the artists similar to this artist 
 </summary>
</member><member name="T:LastFmLib.API20.Base.BaseUserWeeklyChart">
	<summary>
 Get a track chart for a user profile, for a given date range.
 If no date range is supplied, it will return the most recent track chart for this user. 
 </summary>
</member><member name="T:LastFmLib.API20.Types.TagInfo">
	<summary>
 Information on Tags, like name, count and url
 </summary>
</member><member name="P:LastFmLib.TypeClasses.TrackInfo.currentPosition">
	<summary>
 Gets or sets the current position.
 </summary>
	<value>The current position.</value>
</member><member name="P:LastFmLib.TypeClasses.TrackInfo.RatingCharacter">
	<summary>
 Gets or sets the rating character.
 </summary>
	<value>The rating character.</value>
</member><member name="P:LastFmLib.TypeClasses.TrackInfo.Username">
	<summary>
 Gets or sets the username. Here you have the possiblity to assign a username to this track, e.g. for scrobbling
 </summary>
	<value>The username.</value>
</member><member name="M:LastFmLib.TypeClasses.TrackInfo.SetTimeStamp(System.Int64)">
	<summary>
 Sets the Unixtime stamp(in Seconds)
 </summary>
	<param name="timestamp">The timestamp.</param>
</member><member name="M:LastFmLib.TypeClasses.TrackInfo.ToTrackInfoList">
	<summary>
 Returns a List(Of TrackInfo)-instance containing this track instance only.
 </summary>
	<returns>
 If successful, a List(Of TrackInfo) is returned, else <c>null</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.TrackInfo.ToXmlElement(System.Xml.XmlDocument@)">
	<summary>
 Returns a XML representation of this instance, e.g. serializes it.
 </summary>
	<param name="document">The xml document.</param>
	<returns>
 If successful, a XmlElement is returned, else <c>null</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.TrackInfo.SetPaths(System.Collections.Generic.List{System.String})">
	<summary>
 Sets the paths.
 </summary>
	<param name="paths">The paths.</param>
</member><member name="M:LastFmLib.TypeClasses.TrackInfo.qBound(System.Int32,System.Int32,System.Int32)">
	<summary>
 Get a value inside a specific bound
 </summary>
	<param name="min">The min.</param>
	<param name="value">The value.</param>
	<param name="max">The max.</param>
	<returns>If value is outside the bounds, min/max is returned, else value</returns>
</member><member name="P:LastFmLib.TypeClasses.UserMetaData.Name">
	<summary>
 Gets or sets the name.
 </summary>
	<value>The name.</value>
</member><member name="P:LastFmLib.TypeClasses.UserMetaData.Image">
	<summary>
 Gets or sets the image.
 </summary>
	<value>The image.</value>
</member><member name="P:LastFmLib.TypeClasses.UserMetaData.recentTracks">
	<summary>
 Gets or sets the recent tracks list.
 </summary>
	<value>The recent tracks.</value>
</member><member name="P:LastFmLib.TypeClasses.UserMetaData.LastActivity">
	<summary>
 Gets or sets the last activity date string.
 </summary>
	<value>The last activity.</value>
</member><member name="T:LastFmLib.TypeClasses.UserMetaData">
	<summary>
 A class for holding meta data of an user(Name, image, recent tracks list and his last activity)
 </summary>
	<remarks>Needed Proeprtys</remarks>
</member><member name="P:LastFmLib.WebRequests.ChangeStationRequest.xspf">
	<summary>
 Gets the XSPF data.
 </summary>
	<value>The XSPF.</value>
</member><member name="P:LastFmLib.WebRequests.ChangeStationRequest.hasXspf">
	<summary>
 Gets a value indicating whether this instance has XSPF.
 </summary>
	<value><c>true</c> if this instance has XSPF; otherwise, <c>false</c>.</value>
</member><member name="P:LastFmLib.WebRequests.ChangeStationRequest.SessionId">
	<summary>
 Gets or sets the session id.
 </summary>
	<value>The session id.</value>
</member><member name="P:LastFmLib.WebRequests.ChangeStationRequest.Station">
	<summary>
 Gets or sets the station URL.
 </summary>
	<value>The station URL.</value>
</member><member name="P:LastFmLib.WebRequests.ChangeStationRequest.languageCode">
	<summary>
 Gets or sets the language code. Default is Defaults.kLanguageCode.
 </summary>
	<value>The language code.</value>
</member><member name="M:LastFmLib.WebRequests.ChangeStationRequest.#ctor(System.String,LastFmLib.TypeClasses.StationUrl)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.ChangeStationRequest"/> class.
 </summary>
	<param name="sessionId_">The sessionId(Optional).</param>
	<param name="stationUrl_">The station url url, e.g. lastfm://user/tburny/playlist.</param>
</member><member name="M:LastFmLib.WebRequests.ChangeStationRequest.setId(System.Int32)">
	<summary>
 If there is a track Id(e.g. for previewing a track), call this method to set the right lastfm:// url.
 </summary>
	<param name="id">The id.</param>
</member><member name="T:LastFmLib.WebRequests.ChangeStationRequest">
	<summary>
 This class is for changing the or tuning into a station.
 </summary>
</member><member name="P:LastFmLib.WebRequests.RecommendRequest.LanguageCode">
	<summary>
 Gets or sets the language code. Default is Defaults.kLanguageCode
 </summary>
	<value>The language code.</value>
</member><member name="P:LastFmLib.WebRequests.RecommendRequest.Artist">
	<summary>
 Gets or sets the artist.
 </summary>
	<value>The artist.</value>
</member><member name="P:LastFmLib.WebRequests.RecommendRequest.Album">
	<summary>
 Gets or sets the album.
 </summary>
	<value>The album.</value>
</member><member name="P:LastFmLib.WebRequests.RecommendRequest.Track">
	<summary>
 Gets or sets the track.
 </summary>
	<value>The track.</value>
</member><member name="P:LastFmLib.WebRequests.RecommendRequest.TargetUsername">
	<summary>
 Gets or sets the target username.
 </summary>
	<value>The target username.</value>
</member><member name="P:LastFmLib.WebRequests.RecommendRequest.Token">
	<summary>
 Gets the token.
 </summary>
	<value>The token.</value>
</member><member name="M:LastFmLib.WebRequests.RecommendRequest.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.RecommendRequest"/> class.
 </summary>
</member><member name="M:LastFmLib.WebRequests.RecommendRequest.#ctor(LastFmLib.TypeClasses.LastFmUser,System.String,LastFmLib.TypeClasses.TrackInfo,LastFmLib.WebRequests.RecommendRequest.ItemType,System.String,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.RecommendRequest"/> class.
 </summary>
	<param name="u">The user.</param>
	<param name="sTargetUser">The target user.</param>
	<param name="ti">The track information.</param>
	<param name="msg">The message for the recommendation</param>
	<param name="RecommendType">Optional. Type of the recommendation(Artist-,Album-,Track-). Default is track.</param>
	<param name="lang">Optional. The langauge string. Leave empty for setting this to Defaults.kLanguageCode </param>
</member><member name="T:LastFmLib.WebRequests.RecommendRequest">
	<summary>
 Recommends something to a user, e.g a track or a station
 </summary>
</member><member name="P:LastFmLib.API20.Base.BaseShare.Message">
	<summary>
 An optional message to send with the recommendation. If not supplied a default message will be used.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:LastFmLib.API20.Base.BaseShare.Recipients">
	<summary>
 Email Address | Last.fm Username - A cstring list of email addresses or Last.fm usernames. Maximum is 10.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:LastFmLib.API20.Base.BaseShare">
	<summary>
 Base class for [class].share requests
 </summary>
	<remarks></remarks>
</member><member name="T:LastFmLib.API20.Playlists.PlaylistFetch">
	<summary>
 Fetch XSPF playlists using a lastfm playlist url. 
 </summary>
</member><member name="T:LastFmLib.API20.Tag.tagSearch">
	<summary>
 Search for a tag by name. Returns matches sorted by relevance. 
 </summary>
</member><member name="T:LastFmLib.API20.Tracks.TrackShare">
	<summary>
 Share a track twith one or more Last.fm users or other friends. 
 </summary>
</member><member name="M:LastFmLib.API20.Types.AuthData.CheckToken">
	<summary>
 Checks the token and updates it if it's outdated.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:LastFmLib.API20.Types.AuthData">
	<summary>
 Class for storing auth data, like api key, token, secret and session
 </summary>
</member><member name="T:LastFmLib.API20.Types.FriendUser">
	<summary>
 User from friends request
 </summary>
</member><member name="T:LastFmLib.API20.Types.MusicEvent">
	<summary>
 Stores music event data, like artists, description, headliner, venue and url
 </summary>
</member><member name="T:LastFmLib.API20.User.UserGetWeeklyArtistChart">
	<summary>
 Get an artist chart for a user profile, for a given date range.
 If no date range is supplied, it will return the most recent artist chart for this user. 
 </summary>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerManager.Scrobble(LastFmLib.TypeClasses.TrackInfo,System.Boolean)">
	<summary>
 Scrobbles the specified track. Please set track.Username before calling!
 </summary>
	<param name="track">The track.</param>
	<param name="scrobbleSLBTracks">if set to <c>true</c> tracks with a skipped, loved or banned rating character are scrobbled, too.</param>
</member><member name="P:LastFmLib.TypeClasses.StationUrl.isPlaylist">
	<summary>
 Returns whether the station url is a playlist or not.
 </summary>
	<value>The is playlist.</value>
</member><member name="M:LastFmLib.TypeClasses.StationUrl.#ctor(System.String@)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.TypeClasses.StationUrl"/> class.
 </summary>
	<param name="url">The station url.</param>
</member><member name="M:LastFmLib.TypeClasses.StationUrl.#ctor(System.Uri@)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.TypeClasses.StationUrl"/> class.
 </summary>
	<param name="url">The station URL.</param>
</member><member name="M:LastFmLib.TypeClasses.StationUrl.op_Implicit(System.String)~LastFmLib.TypeClasses.StationUrl">
	<summary>
 Implements the operator CType for converting an url to a station url.
 </summary>
	<param name="url">The URL.</param>
	<returns>The result of the operator.</returns>
</member><member name="M:LastFmLib.TypeClasses.StationUrl.op_Implicit(LastFmLib.TypeClasses.StationUrl)~System.String">
	<summary>
 Implements the operator CType for converting a StationUrl
 </summary>
	<param name="su">The su.</param>
	<returns>The result of the operator.</returns>
</member><member name="M:LastFmLib.TypeClasses.StationUrl.ToString(LastFmLib.TypeClasses.StationUrl)">
	<summary>
 Converts a station url to an url-string.
 </summary>
	<param name="su">The station url instance.</param>
	<returns></returns>
</member><member name="M:LastFmLib.TypeClasses.StationUrl.ToString">
	<summary>
 Converts the current instance into a station url string
 </summary>
	<returns>A string containing the station url.</returns>
	<remarks></remarks>
</member><member name="T:LastFmLib.TypeClasses.StationUrl">
	<summary>
 Type for station urls("lastfm://.....")
 </summary>
</member><member name="P:LastFmLib.WebRequests.DeleteFriendRequest.DeletedUsername">
	<summary>
 Gets the deleted username.
 </summary>
</member><member name="M:LastFmLib.WebRequests.DeleteFriendRequest.#ctor(LastFmLib.TypeClasses.LastFmUser,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.DeleteFriendRequest"/> class.
 </summary>
	<param name="target_user">The user which should be deleted.</param>
</member><member name="T:LastFmLib.WebRequests.DeleteFriendRequest">
	<summary>
 Request for deleting a Friend of a user in Last.fm
 </summary>
</member><member name="P:LastFmLib.WebRequests.TagsRequestBase.tags">
	<summary>
 Gets the resulting tag list(after a successful request).
 </summary>
	<value>The tags.</value>
</member><member name="M:LastFmLib.WebRequests.TagsRequestBase.#ctor(LastFmLib.WebRequests.modEnums.RequestType,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.TagsRequestBase"/> class.
 </summary>
	<param name="type">The type.</param>
	<param name="name">The name.</param>
</member><member name="T:LastFmLib.WebRequests.TagsRequestBase">
	<summary>
 Base class for all tags requests
 </summary>
</member><member name="T:LastFmLib.API20.User.UserGetFriends">
	<summary>
 Get a list of the user's friends on Last.fm. 
 </summary>
</member><member name="P:LastFmLib.RSS.XCalEventData.StartDate">
	<summary>
 Gets or sets the start date.
 </summary>
	<value>The start date.</value>
</member><member name="P:LastFmLib.RSS.XCalEventData.EndDate">
	<summary>
 Gets or sets the end date.
 </summary>
	<value>The end date.</value>
</member><member name="P:LastFmLib.RSS.XCalEventData.Location">
	<summary>
 Gets or sets the location.
 </summary>
	<value>The location.</value>
</member><member name="P:LastFmLib.RSS.XCalEventData.LocationUrl">
	<summary>
 Gets the location URL if the Location-property contains a valid Url.
 </summary>
	<value>The location URL.</value>
	<returns>An Uri if succesful, else nothing.</returns>
</member><member name="T:LastFmLib.TypeClasses.WeightedArtist">
	<summary>
An artist with a weighting by which it can be sordted
 </summary>
</member><member name="P:LastFmLib.WebRequests.ArtistTagsRequest.Artist">
	<summary>
 Gets or sets the artist.
 </summary>
	<value>The artist.</value>
</member><member name="M:LastFmLib.WebRequests.ArtistTagsRequest.#ctor(System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.ArtistTagsRequest"/> class.
 </summary>
	<param name="artist">The artist.</param>
</member><member name="T:LastFmLib.WebRequests.ArtistTagsRequest">
	<summary>
 Requests the tags given to an artist
 </summary>
</member><member name="T:LastFmLib.API20.Base.BaseGroupWeeklyChart">
	<summary>
Base class for weekly group charts
 </summary>
</member><member name="T:LastFmLib.API20.Tag.tagGetSimilar">
	<summary>
 Search for tags similar to this one. Returns tags ranked by similarity, based on listening data. 
 </summary>
</member><member name="T:LastFmLib.API20.User.UserGetWeeklyTrackChart">
	<summary>
 Get a track chart for a user profile, for a given date range.
 If no date range is supplied, it will return the most recent track chart for this user. 
 </summary>
</member><member name="P:LastFmLib.Scrobbler.ScrobblerCache.AutoSave">
	<summary>
 Gets or sets a value indicating whether ScrobblerManager should auto-save the cache.
 </summary>
	<value><c>true</c> if ScrobblerManager should auto-save the cache; otherwise, <c>false</c>.</value>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerCache.Append(System.Collections.Generic.List{LastFmLib.TypeClasses.TrackInfo},System.Boolean)">
	<summary>
 Appends the specified tracks and writes them to disk.
 </summary>
	<param name="tracks">The tracks.</param>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerCache.Remove(System.Collections.Generic.List{LastFmLib.TypeClasses.TrackInfo},System.Boolean)">
	<summary>
 Removes the specified elements from cache.
 </summary>
	<param name="toremove">The toremove.</param>
	<returns>How many elements were removed</returns>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerCache.backup">
	<summary>
 Creates a timestamped backup of current cache.
 </summary>
</member><member name="M:LastFmLib.WebRequests.ActionRequest.#ctor(System.String@,LastFmLib.WebRequests.modEnums.RequestType)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.ActionRequest"/> class.
 </summary>
	<param name="method">The method string.</param>
	<param name="t">The type of Request</param>
</member><member name="M:LastFmLib.WebRequests.ActionRequest.#ctor(System.String@,LastFmLib.WebRequests.modEnums.RequestType,LastFmLib.TypeClasses.LastFmUser)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.ActionRequest"/> class.
 </summary>
	<param name="method">The method.</param>
	<param name="rqt">The request type.</param>
	<param name="u">The instance of the user class</param>
</member><member name="M:LastFmLib.WebRequests.ActionRequest.#ctor(System.String@,LastFmLib.WebRequests.modEnums.RequestType,LastFmLib.TypeClasses.LastFmUser,LastFmLib.TypeClasses.Track)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.ActionRequest"/> class.
 </summary>
	<param name="u">The instance of the user class</param>
	<param name="track">The track for which the ActionRequest should be done</param>
</member><member name="M:LastFmLib.WebRequests.ActionRequest.Start">
	<summary>
 Starts the Request. Please set the username and password property before starting, else the request will fail!
 </summary>
</member><member name="T:LastFmLib.WebRequests.ActionRequest">
	<summary>
 Class for Action requests. Also used by deriving classes e.g. to love/ban a track
 </summary>
	<remarks>Propertys you have to set: Username, PasswordMD5</remarks>
</member><member name="T:LastFmLib.WebRequests.UnListenRequest">
	<summary>
 Removes a track from the "Recently listened tracks"-list
 </summary>
</member><member name="T:LastFmLib.WebRequests.LoveRequest">
	<summary>
 Loves a track
 </summary>
</member><member name="T:LastFmLib.WebRequests.UnLoveRequest">
	<summary>
 Removes the "love" of a track.
 </summary>
</member><member name="T:LastFmLib.WebRequests.BanRequest">
	<summary>
 Bans a track
 </summary>
</member><member name="M:LastFmLib.WebRequests.unBanRequest.#ctor(LastFmLib.TypeClasses.Track,LastFmLib.TypeClasses.LastFmUser)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.unBanRequest"/> class.
 </summary>
	<param name="track">The track.</param>
	<param name="u">The u.</param>
</member><member name="M:LastFmLib.WebRequests.unBanRequest.#ctor(LastFmLib.TypeClasses.TrackInfo,LastFmLib.TypeClasses.LastFmUser)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.unBanRequest"/> class.
 </summary>
	<param name="track">The track.</param>
	<param name="u">The u.</param>
</member><member name="T:LastFmLib.WebRequests.unBanRequest">
	<summary>
 Removes a previously banned track from the "banned tracks"-list
 </summary>
</member><member name="T:LastFmLib.WebRequests.addTrackToUserPlaylistRequest">
	<summary>
 Adds a track to the user's personal playlist.
 </summary>
	<remarks>A "removeTrackFromUserPlaylist" would be really nice to have.</remarks>
</member><member name="P:LastFmLib.WebRequests.SimilarArtistsRequest.SimilarArtists">
	<summary>
 Gets the artists which are similar.
 </summary>
	<value>The artists.</value>
</member><member name="P:LastFmLib.WebRequests.SimilarArtistsRequest.Artist">
	<summary>
 The artist of which the similar artists should be requested
 </summary>
	<value>The artist.</value>
</member><member name="M:LastFmLib.WebRequests.SimilarArtistsRequest.#ctor(System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.SimilarArtistsRequest"/> class.
 </summary>
	<param name="artist">The artist of which the similar artists should be requested</param>
</member><member name="M:LastFmLib.WebRequests.SimilarArtistsRequest.#ctor(System.Xml.XmlElement)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.ArtistMetadataRequest"/> class. For doing so it deserializes and xml element.
 </summary>
	<param name="e">The xml element.</param>
</member><member name="M:LastFmLib.WebRequests.SimilarArtistsRequest.InitFromXmlElement(System.Xml.XmlElement)">
	<summary>
 Initializes an instance of this class by deserializing an XmlElement
 </summary>
	<param name="data">The data.</param>
	<returns>
 If successful, a ArtistMetadataRequest is returned, else <c>null</c>
	</returns>
</member><member name="T:LastFmLib.WebRequests.SimilarArtistsRequest">
	<summary>
 Requests a list of Artists which are similiar to an artist
 </summary>
</member><member name="T:LastFmLib.API20.Geo.GeoGetEvents">
	<summary>
 Get all events in a specific location by country or city name. 
 </summary>
</member><member name="T:LastFmLib.API20.Tracks.TrackRemoveTag">
	<summary>
 Remove a user's tag from a track. 
 </summary>
</member><member name="P:LastFmLib.API20.Types.TrackSearchResult.Tracks">
	<summary>
 Gets the tracks.
 </summary>
	<value>The tracks.</value>
</member><member name="M:LastFmLib.API20.Types.TrackSearchResult.#ctor(System.Xml.XmlElement)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.API20.Types.TrackSearchResult"/> class.
 </summary>
	<param name="e">The e.</param>
</member><member name="T:LastFmLib.API20.Types.TrackSearchResult">
	<summary>
 Result type for track search.
 </summary>
</member><member name="T:LastFmLib.API20.Types.Track">
	<summary>
 Stores track meta data
 </summary>
</member><member name="M:LastFmLib.TypeClasses.MetaData.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.TypeClasses.MetaData"/> class.
 </summary>
</member><member name="M:LastFmLib.TypeClasses.MetaData.#ctor(System.Xml.XmlElement@)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.TypeClasses.MetaData"/> class.
 </summary>
	<param name="e">The XML element to use.</param>
</member><member name="P:LastFmLib.TypeClasses.MetaData.IsTrackBuyable">
	<summary>
 Returns if the track is buyable.
 </summary>
</member><member name="P:LastFmLib.TypeClasses.MetaData.IsAlbumBuyable">
	<summary>
 Returns if the track is buyable.
 </summary>
</member><member name="P:LastFmLib.TypeClasses.MetaData.trackTags">
	<summary>
 Gets or sets the tags list for the current track
 </summary>
	<value>The track tags.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.trackPageUrl">
	<summary>
 Gets or sets the track page URL.
 </summary>
	<value>The track page URL.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.buyTrackString">
	<summary>
 Gets or sets the buy track string(often things like "Buy on Amazon.com").
 </summary>
	<value>The buy track string.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.buyTrackUrl">
	<summary>
 Gets or sets the url where you can buy the track
 </summary>
	<value>The buy track URL.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.albumPicUrl">
	<summary>
 Gets or sets the album picture URL.
 </summary>
	<value>The album pic URL.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.albumPageUrl">
	<summary>
 Gets or sets the album page URL.
 </summary>
	<value>The album page URL.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.Label">
	<summary>
 Gets or sets the label.
 </summary>
	<value>The label.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.releaseDate">
	<summary>
 Gets or sets the release date.
 </summary>
	<value>The release date.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.numTracks">
	<summary>
 Gets or sets the number of track in the current album.
 </summary>
	<value>The num tracks.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.buyAlbumString">
	<summary>
 Gets or sets the "buy album" string.
 </summary>
	<value>The buy album string.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.buyAlbumUrl">
	<summary>
 Gets or sets the "buy album" URL.
 </summary>
	<value>The buy album URL.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.similarArtists">
	<summary>
 Gets or sets the similar artist list.
 </summary>
	<value>The similar artists list.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.artistPicUrl">
	<summary>
 Gets or sets the artist picture URL.
 </summary>
	<value>The artist pic URL.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.Wiki">
	<summary>
 Gets or sets the wiki text
 </summary>
	<value>The wiki text.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.wikiPageUrl">
	<summary>
 Gets or sets the wiki page URL.
 </summary>
	<value>The wiki page URL.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.artistPageUrl">
	<summary>
 Gets or sets the artist page URL.
 </summary>
	<value>The artist page URL.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.topFans">
	<summary>
 Gets or sets the top fans list.
 </summary>
	<value>The top fans list.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.numListeners">
	<summary>
 Gets or sets the number of listeners.
 </summary>
	<value>The num listeners.</value>
</member><member name="P:LastFmLib.TypeClasses.MetaData.numPlays">
	<summary>
 Gets or sets the number of plays.
 </summary>
	<value>The num plays.</value>
</member><member name="M:LastFmLib.TypeClasses.MetaData.MergeWith(LastFmLib.TypeClasses.MetaData)">
	<summary>
 Combines this instance with another instatance of the MetaData class
 </summary>
	<param name="md">The meta data</param>
	<returns>All propertys of this instance which are empty are filled with the ones of the parameter's instance.</returns>
</member><member name="M:LastFmLib.TypeClasses.MetaData.ToHTMLString">
	<summary>
 Converts this instance to an HTML string. If viewing it in the browser, the main information about the current album are given.
 EXPERIMENTAL!
 </summary>
	<returns>A string containing the HTML</returns>
</member><member name="T:LastFmLib.TypeClasses.MetaData">
	<summary>
 A type for metadata of a track, such as artist,album,track name, url, MB-ID, url for buying, image, ... Just take a look at the tons of propertys.
 </summary>
</member><member name="P:LastFmLib.TypeClasses.MimeData.hasTrack">
	<summary>
 Gets a value indicating whether this instance has a track.
 </summary>
	<value><c>true</c> if this instance has a track; otherwise, <c>false</c>.</value>
</member><member name="P:LastFmLib.TypeClasses.MimeData.Track">
	<summary>
 Gets or sets the track.
 </summary>
	<value>The track.</value>
</member><member name="P:LastFmLib.TypeClasses.MimeData.hasUser">
	<summary>
 Gets a value indicating whether this instance has a user.
 </summary>
	<value><c>true</c> if this instance has a user; otherwise, <c>false</c>.</value>
</member><member name="P:LastFmLib.TypeClasses.MimeData.User">
	<summary>
 Gets or sets the user.
 </summary>
	<value>The user.</value>
</member><member name="P:LastFmLib.TypeClasses.MimeData.hasTag">
	<summary>
 Gets a value indicating whether this instance has a tag.
 </summary>
	<value><c>true</c> if this instance has a tag; otherwise, <c>false</c>.</value>
</member><member name="P:LastFmLib.TypeClasses.MimeData.Tag">
	<summary>
 Gets or sets the tag.
 </summary>
	<value>The tag.</value>
</member><member name="P:LastFmLib.TypeClasses.MimeData.hasStation">
	<summary>
 Gets a value indicating whether this instance has a station.
 </summary>
	<value>
		<c>true</c> if this instance has a station; otherwise, <c>false</c>.
 </value>
</member><member name="P:LastFmLib.TypeClasses.MimeData.Station">
	<summary>
 Gets or sets the station.
 </summary>
	<value>The station.</value>
</member><member name="T:LastFmLib.TypeClasses.MimeData">
	<summary>
 This class inhertits the QMimeData class(a port from QT to .net) used to store various things.
 </summary>
</member><member name="F:LastFmLib.UnixTime.UnixTimeFormat.Milliseconds">
	<summary>
 Millisekunden
 </summary>
</member><member name="F:LastFmLib.UnixTime.UnixTimeFormat.Seconds">
	<summary>
 Sekunden(Standard)
 </summary>
</member><member name="F:LastFmLib.UnixTime.UnixTimeFormat.Minutes">
	<summary>
 Minuten
 </summary>
</member><member name="F:LastFmLib.UnixTime.UnixTimeFormat.Hours">
	<summary>
 Stunden
 </summary>
</member><member name="F:LastFmLib.UnixTime.UnixTimeFormat.Days">
	<summary>
 Tage
 </summary>
</member><member name="T:LastFmLib.UnixTime.UnixTimeFormat">
	<summary>
 Bestimmt das Ein-/Ausgabeformat der Unixzeit
 </summary>
</member><member name="M:LastFmLib.UnixTime.#ctor">
	<summary>
 Erstellt eine neue Instanz der <see cref="T:LastFmLib.UnixTime"/>-Klasse.
 </summary>
</member><member name="M:LastFmLib.UnixTime.get(LastFmLib.UnixTime.UnixTimeFormat)">
	<summary>
 Gibt die Unixzeit im Format <paramref name="format">format</paramref> zurück.
 </summary>
	<param name="format">Das Zeitformat</param>
	<returns></returns>
</member><member name="M:LastFmLib.UnixTime.set(System.Int64,LastFmLib.UnixTime.UnixTimeFormat)">
	<summary>
 Setzt die Unixzeit innerhalb dieser Klasse.
 </summary>
	<param name="value">Ein Long-Wert, der eine Zahl passend zu <paramref name="format">format</paramref> enthält.</param>
	<param name="format">Das Zeitformat des Parameters <paramref name="value">value</paramref>.</param>
</member><member name="M:LastFmLib.UnixTime.ConvertValueToTimeSpan(System.Int64,LastFmLib.UnixTime.UnixTimeFormat)">
	<summary>
 Gibt die Unixzeit zurück, die bis zu einem bestimmten Datum vergangen ist.
 </summary>
	<param name="value">Der Zeitwert</param>
	<param name="format">Das Zeitformat des Parameters <paramref name="value">value</paramref>.</param>
	<returns></returns>
</member><member name="M:LastFmLib.UnixTime.GetUnixTime(LastFmLib.UnixTime.UnixTimeFormat)">
	<summary>
 Gibt die Unixzeit im Zeitformat <paramref name="format">format</paramref> zurück und weist diesen Zeitwert der Klasse zu.
 </summary>
	<returns>Die Zeitformatierte Unixzeit.</returns>
</member><member name="M:LastFmLib.UnixTime.GetUnixTimeOfDate(System.DateTime)">
	<summary>
 Gibt die Unixzeit zurück.
 </summary>
	<param name="d">The date of which the unix time is calculated.</param>
	<returns>Eine TimeSpan, die die Unixzeit(die Zeit seit dem 1.1.1970 vergangen ist</returns>
</member><member name="M:LastFmLib.UnixTime.convertTimeSpanToUnixTime(System.TimeSpan,LastFmLib.UnixTime.UnixTimeFormat)">
	<summary>
 Konvertiert eine Zeitspanne in eine Zeitwert im Zeitformat <paramref name="format">format</paramref>.
 </summary>
	<param name="ts">Die zeitspanne</param>
	<param name="format">Das Zeitformat</param>
	<returns></returns>
</member><member name="P:LastFmLib.WebRequests.Handshake.Language">
	<summary>
 Gets or sets the language string. Default is Defaults.kLanguageCode.
 </summary>
	<value>The language.</value>
</member><member name="P:LastFmLib.WebRequests.Handshake.Plaform">
	<summary>
 Gets or sets the plaform string. See audioscrobbler doc for further information. Default is Defaults.kPlatform.
 </summary>
	<value>The plaform.</value>
</member><member name="P:LastFmLib.WebRequests.Handshake.Message">
	<summary>
 If there is a message in the server response, you can obtain it here.
 </summary>
	<value>The message.</value>
</member><member name="P:LastFmLib.WebRequests.Handshake.IsSubscriber">
	<summary>
 Gets a value indicating whether the user is a subscriber.
 </summary>
	<value>
		<c>true</c> if the user is a subscriber; otherwise, <c>false</c>.
 </value>
</member><member name="P:LastFmLib.WebRequests.Handshake.StreamUrl">
	<summary>
 Gets the stream URL.
 </summary>
	<value>The stream URL.</value>
</member><member name="P:LastFmLib.WebRequests.Handshake.ClientVersion">
	<summary>
 Gets or sets the version string. Default is Defaults.kClientVersion.
 </summary>
	<value>The version.</value>
</member><member name="P:LastFmLib.WebRequests.Handshake.hasMessage">
	<summary>
 Gets the has message.
 </summary>
	<value>The has message.</value>
</member><member name="P:LastFmLib.WebRequests.Handshake.User">
	<summary>
 Gets or sets the user.
 </summary>
	<value>The user.</value>
</member><member name="M:LastFmLib.WebRequests.Handshake.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.Handshake"/> class.
 </summary>
</member><member name="M:LastFmLib.WebRequests.Handshake.#ctor(LastFmLib.TypeClasses.LastFmUser)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.Handshake"/> class.
 </summary>
	<param name="u">The instance of the user class</param>
</member><member name="M:LastFmLib.WebRequests.Handshake.Start">
	<summary>
 Starts the request and gets the response.
 </summary>
</member><member name="T:LastFmLib.WebRequests.Handshake">
	<summary>
 This Request is for doing the handshake with Last.fm's server.
 The request returns the basic user-specific information like whether he is a subscriber and a session Id which is needed for most other requests,
 like the the GetXspfPlaylistRequest or all deriving classes of the ActionRequest class.
 </summary>
</member><member name="P:LastFmLib.WebRequests.RadioMetaDataRequest.SessionId">
	<summary>
 Gets or sets the sessionId.
 </summary>
	<value>The session.</value>
</member><member name="P:LastFmLib.WebRequests.RadioMetaDataRequest.MetaData">
	<summary>
 Gets or Return the meta data of the Request
 </summary>
	<value>The meta data.</value>
</member><member name="P:LastFmLib.WebRequests.RadioMetaDataRequest.StationName">
	<summary>
 Gets the name of the station.
 </summary>
	<value>The name of the station.</value>
</member><member name="P:LastFmLib.WebRequests.RadioMetaDataRequest.StationFeed">
	<summary>
 Gets the station feed url.
 </summary>
	<value>The station feed url.</value>
</member><member name="M:LastFmLib.WebRequests.RadioMetaDataRequest.#ctor(System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.RadioMetaDataRequest"/> class.
 </summary>
	<param name="sId">The SessionID.</param>
</member><member name="T:LastFmLib.WebRequests.RadioMetaDataRequest">
	<summary>
 Gets the information about the track which is currently playing.
 </summary>
</member><member name="P:LastFmLib.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:LastFmLib.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:LastFmLib.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:LastFmLib.API20.Artist.ArtistRemoveTag">
	<summary>
 Remove a user's tag from an artist. 
 </summary>
</member><member name="T:LastFmLib.API20.User.NeighbourUser">
	<summary>
 A user from user.GetNeighbours
 </summary>
</member><member name="T:LastFmLib.API20.User.UserGetTopTags">
	<summary>
 Get the top tags used by this user. 
 </summary>
</member><member name="P:LastFmLib.WebRequests.ArtistMetadataRequest.Metadata">
	<summary>
 Gets the metadata of the Artist, if request succeeded.
 </summary>
	<value>The metadata.</value>
</member><member name="P:LastFmLib.WebRequests.ArtistMetadataRequest.Artist">
	<summary>
 Gets or sets the artist name.
 </summary>
	<value>The artist.</value>
</member><member name="M:LastFmLib.WebRequests.ArtistMetadataRequest.#ctor(System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.ArtistMetadataRequest"/> class.
 </summary>
	<param name="artist">The artist.</param>
</member><member name="T:LastFmLib.WebRequests.ArtistMetadataRequest">
	<summary>
 Requests Metadata of an artist
 </summary>
</member><member name="P:LastFmLib.WebRequests.UserTrackTagsRequest.TrackName">
	<summary>
 Gets or sets the track name.
 </summary>
	<value>The track name.</value>
</member><member name="P:LastFmLib.WebRequests.UserTrackTagsRequest.path">
	<summary>
 Gets the request path(relative to the user's url).
 </summary>
	<value>The path.</value>
</member><member name="M:LastFmLib.WebRequests.UserTrackTagsRequest.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.UserTrackTagsRequest"/> class.
 </summary>
</member><member name="M:LastFmLib.WebRequests.UserTrackTagsRequest.#ctor(System.String,System.String,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.UserTrackTagsRequest"/> class.
 </summary>
	<param name="sUsername">The s username.</param>
	<param name="sArtist">The s artist.</param>
	<param name="sTrackName">Name of the s track.</param>
</member><member name="T:LastFmLib.WebRequests.UserTrackTagsRequest">
	<summary>
 Gets the tags for a track of a user
 </summary>
</member><member name="T:LastFmLib.API20.Artist.ArtistSearch">
	<summary>
 Search for an artist by name. Returns artist matches sorted by relevance. 
 </summary>
</member><member name="T:LastFmLib.API20.Groups.GroupGetWeeklyAlbumChart">
	<summary>
 Get an album chart for a group, for a given date range. If no date range is supplied, it will return the most recent album chart for this group. 
 </summary>
</member><member name="T:LastFmLib.API20.Tracks.TrackLove">
	<summary>
 Love a track for a user profile. 
 This needs to be supplemented with a scrobbling submission containing the 'love' rating (see the audioscrobbler API). 
 </summary>
</member><member name="T:LastFmLib.API20.Tracks.TrackSearch">
	<summary>
 Search for a track by track name. Returns track matches sorted by relevance. 
 </summary>
</member><member name="M:LastFmLib.API20.Types.TagSearchResult.#ctor(System.Xml.XmlElement)">
	<summary>
 Creates a new instance of tagSearchResult using an xml-element
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:LastFmLib.API20.Types.TagSearchResult.FromXmlElement(System.Xml.XmlElement)">
	<summary>
 Creates an instance from an xml element containing the search results
 </summary>
	<param name="elem"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:LastFmLib.API20.Types.TagSearchResult">
	<summary>
 Result class of tag search
 </summary>
</member><member name="T:LastFmLib.API20.User.UserGetRecentTracks">
	<summary>
 Get a list of the recent tracks listened to by this user. Indicates now playing track if the user is currently listening. 
 </summary>
</member><member name="P:LastFmLib.WebRequests.UserArtistTagsRequest.Artist">
	<summary>
 Gets or sets the artist.
 </summary>
	<value>The artist.</value>
</member><member name="P:LastFmLib.WebRequests.UserArtistTagsRequest.path">
	<summary>
 Gets the request path.
 </summary>
	<value>The path.</value>
</member><member name="M:LastFmLib.WebRequests.UserArtistTagsRequest.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.UserArtistTagsRequest"/> class.
 </summary>
</member><member name="M:LastFmLib.WebRequests.UserArtistTagsRequest.#ctor(System.String,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.UserArtistTagsRequest"/> class.
 </summary>
	<param name="sUsername">The username.</param>
	<param name="sArtist">The artist.</param>
</member><member name="T:LastFmLib.WebRequests.UserArtistTagsRequest">
	<summary>
 Requestst the user's tags for an artist
 </summary>
</member><member name="T:LastFmLib.API20.Artist.ArtistGetTopTags">
	<summary>
 Get the top tags for an artist on Last.fm, ordered by popularity. 
 </summary>
</member><member name="T:LastFmLib.API20.Geo.GetTopArtists">
	<summary>
 Get the most popular artists on Last.fm by country 
 </summary>
</member><member name="P:LastFmLib.API20.Types.ArtistInfo.SimilarArtists">
	<summary>
 Gets or sets the similar artists.
 </summary>
	<value>The similar artists.</value>
</member><member name="P:LastFmLib.API20.Types.ArtistInfo.Tags">
	<summary>
 Gets or sets the tags.
 </summary>
	<value>The tags.</value>
</member><member name="P:LastFmLib.API20.Types.ArtistInfo.BioText">
	<summary>
 Gets or sets the biography text.
 </summary>
	<value>The bio text.</value>
</member><member name="P:LastFmLib.API20.Types.ArtistInfo.BioSummary">
	<summary>
 Gets or sets the biography summary.
 </summary>
	<value>The bio summary.</value>
</member><member name="P:LastFmLib.API20.Types.ArtistInfo.BioPushlishDate">
	<summary>
 Gets or sets the bio pushlish date.
 </summary>
	<value>The bio pushlish date.</value>
</member><member name="P:LastFmLib.API20.Types.ArtistInfo.IsStreamable">
	<summary>
 Gets or sets a value indicating whether this artist is streamable.
 </summary>
	<value>
		<c>true</c> if this instance is streamable; otherwise, <c>false</c>.
 </value>
</member><member name="P:LastFmLib.API20.Types.ArtistInfo.PlayCount">
	<summary>
 Gets or sets the play count.
 </summary>
	<value>The play count.</value>
</member><member name="P:LastFmLib.API20.Types.ArtistInfo.NumListeners">
	<summary>
 Gets or sets the number of listeners.
 </summary>
	<value>The num listeners.</value>
</member><member name="P:LastFmLib.API20.Types.ArtistInfo.ImageOriginal">
	<summary>
 Gets or sets the original image's url.
 </summary>
	<value>The url.</value>
</member><member name="P:LastFmLib.API20.Types.ArtistInfo.Url">
	<summary>
 Gets or sets the URL.
 </summary>
	<value>The URL.</value>
</member><member name="P:LastFmLib.API20.Types.ArtistInfo.MbId">
	<summary>
 Gets or sets the MB-Id.
 </summary>
	<value>The mb id.</value>
</member><member name="P:LastFmLib.API20.Types.ArtistInfo.Name">
	<summary>
 Gets or sets the artist name.
 </summary>
	<value>The name.</value>
</member><member name="M:LastFmLib.API20.Types.ArtistInfo.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.API20.Types.ArtistInfo"/> class.
 </summary>
</member><member name="M:LastFmLib.API20.Types.ArtistInfo.ToDebugString">
	<summary>
 Creates a string for debugging.
 </summary>
	<returns>
 If successful, a String is returned, else <c>null</c>
	</returns>
</member><member name="M:LastFmLib.API20.Types.ArtistInfo.FromXmlElement(System.Xml.XmlElement)">
	<summary>
 Creates an instance of ArtistInfo from an XmlElement's content
 </summary>
	<param name="elem">The elem.</param>
	<returns>
 If successful, a ArtistInfo is returned, else <c>null</c>
	</returns>
</member><member name="T:LastFmLib.API20.Types.ArtistInfo">
	<summary>
 Stores artist information
 </summary>
</member><member name="P:LastFmLib.API20.Types.Venue.Url">
	<summary>
 Gets or sets the URL.
 </summary>
	<value>The URL.</value>
</member><member name="P:LastFmLib.API20.Types.Venue.Timzone">
	<summary>
 Gets or sets the timzone.
 </summary>
	<value>The timzone.</value>
</member><member name="P:LastFmLib.API20.Types.Venue.GeoPoint">
	<summary>
 The geogrpahic venue point, where X is the latitude and y the longitude
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:LastFmLib.API20.Types.Venue.PostalCode">
	<summary>
 Gets or sets the postal code.
 </summary>
	<value>The postal code.</value>
</member><member name="P:LastFmLib.API20.Types.Venue.Street">
	<summary>
 Gets or sets the street.
 </summary>
	<value>The street.</value>
</member><member name="P:LastFmLib.API20.Types.Venue.Country">
	<summary>
 Gets or sets the country.
 </summary>
	<value>The country.</value>
</member><member name="P:LastFmLib.API20.Types.Venue.City">
	<summary>
 Gets or sets the city.
 </summary>
	<value>The city.</value>
</member><member name="P:LastFmLib.API20.Types.Venue.Name">
	<summary>
 Gets or sets the name.
 </summary>
	<value>The name.</value>
</member><member name="T:LastFmLib.API20.Types.Venue">
	<summary>
 Class for storing value data
 </summary>
</member><member name="P:LastFmLib.Scrobbler.ScrobblerHandshakeRequest.ResponseString">
	<summary>
 Gets the response string.
 </summary>
	<value>The response string.</value>
</member><member name="P:LastFmLib.Scrobbler.ScrobblerHandshakeRequest.ScrobblerSessionId">
	<summary>
 Gets the scrobbler session id.
 </summary>
	<value>The scrobbler session id.</value>
</member><member name="P:LastFmLib.Scrobbler.ScrobblerHandshakeRequest.NowPlayingUrl">
	<summary>
 Gets the now playing URL.
 </summary>
	<value>The now playing URL.</value>
</member><member name="P:LastFmLib.Scrobbler.ScrobblerHandshakeRequest.SubmissionUrl">
	<summary>
 Gets the submission URL.
 </summary>
	<value>The submission URL.</value>
</member><member name="P:LastFmLib.Scrobbler.ScrobblerHandshakeRequest.ErrorCode">
	<summary>
 Gets the error code.
 </summary>
	<value>The error code.</value>
</member><member name="P:LastFmLib.Scrobbler.ScrobblerHandshakeRequest.ClientId">
	<summary>
 Gets or sets the client id. Default is Defaults.kClientID
 </summary>
	<value>The client id.</value>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerHandshakeRequest.request">
	<summary>
 Requests this instance.
 </summary>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerHandshakeRequest.request(LastFmLib.Scrobbler.ScrobblerInit@)">
	<summary>
 Does the Handshake
 </summary>
	<param name="init">The initial structure.</param>
</member><member name="M:LastFmLib.Scrobbler.ScrobblerHandshakeRequest.success(System.String)">
	<summary>
 Is called if the request was successful.
 </summary>
	<param name="data">The data.</param>
</member><member name="T:LastFmLib.Scrobbler.ScrobblerHandshakeRequest">
	<summary>
 This is for handshaking with the Audioscrobbler submission system-
 </summary>
</member><member name="P:LastFmLib.TypeClasses.Track.ArtistName">
	<summary>
 Gets or sets the artist.
 </summary>
	<value>The artist.</value>
</member><member name="M:LastFmLib.TypeClasses.Track.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.TypeClasses.Track"/> class.
 </summary>
</member><member name="M:LastFmLib.TypeClasses.Track.#ctor(System.String,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.TypeClasses.Track"/> class.
 </summary>
	<param name="artist">The artist.</param>
	<param name="title">The title.</param>
</member><member name="P:LastFmLib.TypeClasses.Track.Title">
	<summary>
 Gets or sets the title.
 </summary>
	<value>The title.</value>
</member><member name="M:LastFmLib.TypeClasses.Track.op_Equality(LastFmLib.TypeClasses.Track,LastFmLib.TypeClasses.Track)">
	<summary>
 Implements the operator =.
 </summary>
	<param name="trackone">The trackone.</param>
	<param name="other">The other.</param>
	<returns>The result of the operator.</returns>
</member><member name="M:LastFmLib.TypeClasses.Track.op_Inequality(LastFmLib.TypeClasses.Track,LastFmLib.TypeClasses.Track)">
	<summary>
 Implements the operator &lt;&gt;.
 </summary>
	<param name="trackone">The trackone.</param>
	<param name="other">The other.</param>
	<returns>The result of the operator.</returns>
</member><member name="P:LastFmLib.TypeClasses.Track.DisplayText">
	<summary>
 Gets the display text(= "[artist] - [title]")
 </summary>
	<value>The display text.</value>
</member><member name="P:LastFmLib.TypeClasses.Track.IsEmpty">
	<summary>
 Gets a value indicating whether this instance is empty.
 </summary>
	<value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
</member><member name="M:LastFmLib.TypeClasses.Track.ToString">
	<summary>
 Same as displayText method. 
 </summary>
</member><member name="T:LastFmLib.TypeClasses.Track">
	<summary>
 A track(without album,...)
 </summary>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.#ctor">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.TypeClasses.LastFmUser"/> class.
 </summary>
</member><member name="P:LastFmLib.TypeClasses.LastFmUser.Password">
	<summary>
 Gets or sets the password. If setting it, the PasswordMD5 property will be set automatically, too.
 </summary>
	<value>The password.</value>
</member><member name="P:LastFmLib.TypeClasses.LastFmUser.scrobblePoint">
	<summary>
 Gets or sets the scrobble point.
 </summary>
	<value>The scrobble point.</value>
</member><member name="P:LastFmLib.TypeClasses.LastFmUser.PasswordMD5">
	<summary>
 Gets or sets the password Md5.
 </summary>
	<value>The password Md5.</value>
	<exception cref="T:System.ArgumentOutOfRangeException">When setting the session ID, this exception is thrown of the session id has not 32 chars length.</exception>
</member><member name="P:LastFmLib.TypeClasses.LastFmUser.SessionID">
	<summary>
 Gets or sets the session ID.
 </summary>
	<value>The session ID.</value>
	<exception cref="T:System.ArgumentOutOfRangeException">When setting the session ID, this exception is thrown of the session id has not 32 chars length.</exception>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.ValidateUsernameAndPasswordMD5">
	<summary>
 Validates the username and the password MD5
 </summary>
	<returns></returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.ValidateUser">
	<summary>
 Prüft ob der Benutzername gültig ist. Wenn ja, wird True zurückgegeben.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.ValidatePasswordMD5">
	<summary>
 Prüft ob der Passwort-MD5 gültig ist. Wenn ja, wird True zurückgegeben.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.GetFriends">
	<summary>
 Gets the friends list - including ther meta data - of this user.
 </summary>
	<returns>If successful, a list of TypeClasses.UserMetaData is returned, else Nothing</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.GetNeighbours">
	<summary>
 Gets the neighbours as a TypeClasses.WeightedStringLisr
 </summary>
	<returns>If successful, a WeightedStringList is returned, otherwise Nothing</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.GetRecentlyListenedTracks">
	<summary>
 Gets the neighbours as a TypeClasses.WeightedStringLisr
 </summary>
	<returns>If successful, a List(Of Track) is retured, otherwise Nothing</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.GetRecentlyLovedTracks">
	<summary>
 Gets the recently loved tracks.
 </summary>
	<returns>
 If succesfull, a List(of Track) is returned, otherwise Nothing
 </returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.GetRecentlyBannedTracks">
	<summary>
 Gets the recently banned tracks.
 </summary>
	<returns>
 If succesfull, a List(of Track) is returned, otherwise Nothing
 </returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.RecommendArtist(System.String,System.String,System.String)">
	<summary>
 Recommends an artist to a user
 </summary>
	<param name="recommendToUsername">The recommend to username.</param>
	<param name="artist">The artist name.</param>
	<param name="message">The message.</param>
	<returns>
		<c>true</c> if successful, else <c>false</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.RecommendAlbum(System.String,LastFmLib.TypeClasses.TrackInfo,System.String)">
	<summary>
 Recommends a track to a user
 </summary>
	<param name="recommendToUsername">The recommend to username.</param>
	<param name="track">The track.</param>
	<param name="message">The message.</param>
	<returns>
		<c>true</c> if successful, else <c>false</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.RecommendTrack(System.String,LastFmLib.TypeClasses.TrackInfo,System.String)">
	<summary>
 Recommends a track to a user
 </summary>
	<param name="recommendToUsername">The recommend to username.</param>
	<param name="track">The TrackInfo instance containing artist and track</param>
	<param name="message">The message.</param>
	<returns>
		<c>true</c> if successful, else <c>false</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.RecommendTrack(System.String,LastFmLib.TypeClasses.Track,System.String)">
	<summary>
 Recommends a track to a user
 </summary>
	<param name="recommendToUsername">The recommend to username.</param>
	<param name="track">The track.</param>
	<param name="message">The message.</param>
	<returns>
		<c>true</c> if successful, else <c>false</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.TagArtist(System.String,System.Collections.Generic.List{System.String}@,LastFmLib.WebRequests.modEnums.TagMode)">
	<summary>
 Tags an artist with a list of tags.
 </summary>
	<param name="artist">The artist.</param>
	<param name="tags">The tags.</param>
	<param name="mode">The tagging mode(append tags or overwrite them).</param>
	<returns>
		<c>true</c> if successful, else <c>false</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.TagArtist(LastFmLib.TypeClasses.TrackInfo,System.Collections.Generic.List{System.String}@,LastFmLib.WebRequests.modEnums.TagMode)">
	<summary>
 Tags an artist with a list of tags.
 </summary>
	<param name="track">The TrackInfo containg the artist name.</param>
	<param name="tags">The tags.</param>
	<param name="mode">The tagging mode(append tags or overwrite them).</param>
	<returns>
		<c>true</c> if successful, else <c>false</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.TagAlbum(LastFmLib.TypeClasses.TrackInfo,System.Collections.Generic.List{System.String}@,LastFmLib.WebRequests.modEnums.TagMode)">
	<summary>
 Tags an album with a list of tags.
 </summary>
	<param name="track">The TrackInfo containg the artist and the album name.</param>
	<param name="tags">The tags.</param>
	<param name="mode">The tagging mode(append tags or overwrite them).</param>
	<returns>
		<c>true</c> if successful, else <c>false</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.TagTrack(LastFmLib.TypeClasses.TrackInfo,System.Collections.Generic.List{System.String}@,LastFmLib.WebRequests.modEnums.TagMode)">
	<summary>
 Tags a track with a list of tags.
 </summary>
	<param name="track">The TrackInfo containg the artist and the album name.</param>
	<param name="tags">The tags.</param>
	<param name="mode">The tagging mode(append tags or overwrite them).</param>
	<returns>
		<c>true</c> if successful, else <c>false</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.TagTrack(LastFmLib.TypeClasses.Track,System.Collections.Generic.List{System.String}@,LastFmLib.WebRequests.modEnums.TagMode)">
	<summary>
 Tags an album with a list of tags.
 </summary>
	<param name="track">The Track instance containg the artist and the album name.</param>
	<param name="tags">The tags.</param>
	<param name="mode">The tagging mode(append tags or overwrite them).</param>
	<returns>
		<c>true</c> if successful, else <c>false</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.GetTopListenedArtists(LastFmLib.WebRequests.modEnums.TopXTimeSpan)">
	<summary>
 Gets the top listened artists.
 </summary>
	<param name="timeSpan">The time span(3, 6, 12 months or overall).</param>
	<returns>
 If successful, a WeightedArtistList is returned, else <c>null</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.GetUserTags">
	<summary>
 Gets the user's (personal) tags.
 </summary>
	<returns>
 If successful, a WeightedStringList is returned, else <c>null</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.GetUserAlbumTags(System.String,System.String)">
	<summary>
 Gets the user's album tags.
 </summary>
	<param name="artistname">The artistname.</param>
	<param name="album">The album.</param>
	<returns>
 If successful, a WeightedStringList is returned, else <c>null</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.GetUserArtistTags(System.String)">
	<summary>
 Gets the user's artist tags.
 </summary>
	<param name="artistName">Name of the artist.</param>
	<returns>
 If successful, a WeightedStringList is returned, else <c>null</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.GetUserTrackTags(LastFmLib.TypeClasses.Track)">
	<summary>
 Gets the user's tags for a track.
 </summary>
	<param name="track">The track.</param>
	<returns>
 If successful, a WeightedStringList is returned, else <c>null</c>
	</returns>
</member><member name="M:LastFmLib.TypeClasses.LastFmUser.GetUserTrackTags(LastFmLib.TypeClasses.TrackInfo)">
	<summary>
 Gets the user's tags for a track.
 </summary>
	<param name="trackinf">The TrackInfo instance containing artist and track title.</param>
	<returns>
 If successful, a WeightedStringList is returned, else <c>null</c>
	</returns>
</member><member name="T:LastFmLib.TypeClasses.LastFmUser">
	<summary>
 Holds the Informations/Settings of a user.
 </summary>
</member><member name="M:LastFmLib.WebRequests.RequestCache.XmlElementToRequest(System.Xml.XmlElement)">
	<summary>
 Converts an XmlElement into a request.
 </summary>
	<param name="data">The data XmlElement. It must have "request" as name and "type" as Attribute</param>
	<returns>
 If successful, a RequestBase is returned, else <c>null</c>
	</returns>
</member><member name="P:LastFmLib.WebRequests.AlbumMetaDataRequest.mbId">
	<summary>
 The MusicBrainz-Id of the current Album.
 </summary>
</member><member name="P:LastFmLib.WebRequests.AlbumMetaDataRequest.CoverLarge">
	<summary>
 Gets the Url to the large cover.
 </summary>
</member><member name="P:LastFmLib.WebRequests.AlbumMetaDataRequest.CoverMedium">
	<summary>
 Gets the Url to the medium cover.
 </summary>
</member><member name="P:LastFmLib.WebRequests.AlbumMetaDataRequest.CoverSmall">
	<summary>
 Gets the Url to the small cover.
 </summary>
</member><member name="P:LastFmLib.WebRequests.AlbumMetaDataRequest.Url">
	<summary>
 Gets the Url to Last.fm's album page for this album.
 </summary>
</member><member name="P:LastFmLib.WebRequests.AlbumMetaDataRequest.releaseDate">
	<summary>
 Gets the album's release date.
 </summary>
	<value>The release date.</value>
</member><member name="P:LastFmLib.WebRequests.AlbumMetaDataRequest.PlayCount">
	<summary>
 Gets the number of plays for this album.
 </summary>
</member><member name="P:LastFmLib.WebRequests.AlbumMetaDataRequest.Artist">
	<summary>
 Gets or sets the artist name.
 </summary>
	<value>The artist name</value>
</member><member name="P:LastFmLib.WebRequests.AlbumMetaDataRequest.Album">
	<summary>
 Gets or sets the album name
 </summary>
	<value>The album name</value>
</member><member name="P:LastFmLib.WebRequests.AlbumMetaDataRequest.Tracks">
	<summary>
 Gets the tracks contained in the album
 </summary>
</member><member name="M:LastFmLib.WebRequests.AlbumMetaDataRequest.#ctor(System.String,System.String)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.AlbumMetaDataRequest"/> class.
 </summary>
	<param name="sArtist">The artist name.</param>
	<param name="sAlbum">The album name.</param>
</member><member name="M:LastFmLib.WebRequests.AlbumMetaDataRequest.#ctor(System.Xml.XmlElement)">
	<summary>
 Initializes a new instance of the <see cref="T:LastFmLib.WebRequests.ArtistMetadataRequest"/> class. For doing so it deserializes and xml element.
 </summary>
	<param name="e">The xml element.</param>
</member><member name="M:LastFmLib.WebRequests.AlbumMetaDataRequest.InitFromXmlElement(System.Xml.XmlElement)">
	<summary>
 Initializes an instance of this class by deserializing an XmlElement
 </summary>
	<param name="e">The data.</param>
	<returns>
 If successful, a ArtistMetadataRequest is returned, else <c>null</c>
	</returns>
</member><member name="M:LastFmLib.WebRequests.AlbumMetaDataRequest.Start">
	<summary>
 Starts the request and gets the response.
 </summary>
</member><member name="M:LastFmLib.WebRequests.AlbumMetaDataRequest.success(System.String)">
	<summary>
 Is called if the request was successful.
 </summary>
	<param name="data">The data.</param>
</member><member name="T:LastFmLib.WebRequests.AlbumMetaDataRequest">
	<summary>
 Gets the information of an album, such as MusicBrainz-Id,Covers, Track Nubers and Titles, Release Date, ....
 </summary>
	<remarks>Just look at the variables below to see what you'll get^^</remarks>
</member>
</members>
</doc>